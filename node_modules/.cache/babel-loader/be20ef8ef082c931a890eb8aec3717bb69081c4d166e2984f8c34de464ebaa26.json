{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ccv-movie-frontend\\\\src\\\\components\\\\PosterSlider.tsx\";\nimport { mockMovies } from \"../data/mockData\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PosterSlider = ({\n  filter\n}) => {\n  // Filter movies based on the selected filter\n  const getFilteredMovies = () => {\n    const currentDate = new Date().toISOString().split(\"T\")[0];\n    switch (filter) {\n      case \"today\":\n        return mockMovies.filter(movie => movie.releaseDate === currentDate);\n      case \"upcoming\":\n        return mockMovies.filter(movie => movie.releaseDate > currentDate);\n      case \"outdated\":\n        return mockMovies.filter(movie => movie.releaseDate < currentDate);\n      default:\n        return mockMovies;\n    }\n  };\n  const filteredMovies = getFilteredMovies();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poster-item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poster-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.image || \"/placeholder.svg\",\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)), filteredMovies.length === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poster-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster-placeholder\",\n          children: \"Image1.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poster-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster-placeholder\",\n          children: \"Image2.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poster-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster-placeholder\",\n          children: \"Image3.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poster-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster-placeholder\",\n          children: \"Image4.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_c = PosterSlider;\nexport default PosterSlider;\nvar _c;\n$RefreshReg$(_c, \"PosterSlider\");","map":{"version":3,"names":["mockMovies","jsxDEV","_jsxDEV","Fragment","_Fragment","PosterSlider","filter","getFilteredMovies","currentDate","Date","toISOString","split","movie","releaseDate","filteredMovies","children","map","className","src","image","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","id","length","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/components/PosterSlider.tsx"],"sourcesContent":["import type React from \"react\"\r\nimport { mockMovies } from \"../data/mockData\"\r\n\r\ninterface PosterSliderProps {\r\n  filter: string\r\n}\r\n\r\nconst PosterSlider: React.FC<PosterSliderProps> = ({ filter }) => {\r\n  // Filter movies based on the selected filter\r\n  const getFilteredMovies = () => {\r\n    const currentDate = new Date().toISOString().split(\"T\")[0]\r\n\r\n    switch (filter) {\r\n      case \"today\":\r\n        return mockMovies.filter((movie) => movie.releaseDate === currentDate)\r\n      case \"upcoming\":\r\n        return mockMovies.filter((movie) => movie.releaseDate > currentDate)\r\n      case \"outdated\":\r\n        return mockMovies.filter((movie) => movie.releaseDate < currentDate)\r\n      default:\r\n        return mockMovies\r\n    }\r\n  }\r\n\r\n  const filteredMovies = getFilteredMovies()\r\n\r\n  return (\r\n    <>\r\n      {filteredMovies.map((movie) => (\r\n        <div key={movie.id} className=\"poster-item\">\r\n          <div className=\"poster-image\">\r\n            <img src={movie.image || \"/placeholder.svg\"} alt={movie.title} />\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      {/* If no movies match the filter, show placeholders */}\r\n      {filteredMovies.length === 0 && (\r\n        <>\r\n          <div className=\"poster-item\">\r\n            <div className=\"poster-placeholder\">Image1.png</div>\r\n          </div>\r\n          <div className=\"poster-item\">\r\n            <div className=\"poster-placeholder\">Image2.png</div>\r\n          </div>\r\n          <div className=\"poster-item\">\r\n            <div className=\"poster-placeholder\">Image3.png</div>\r\n          </div>\r\n          <div className=\"poster-item\">\r\n            <div className=\"poster-placeholder\">Image4.png</div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PosterSlider\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}