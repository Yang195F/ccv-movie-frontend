{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ccv-movie-frontend\\\\src\\\\users\\\\pages\\\\ResetPasswordPage.tsx\",\n  _s = $RefreshSig$();\n// src/pages/auth/ResetPasswordPage.tsx\nimport React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Navbar from \"../../components/Navbar\";\nimport Footer from \"../../components/Footer\";\nimport InputField from \"../../components/InputField\";\nimport { resetPassword } from \"../../services/authService\";\nimport \"../styles/login_page.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPasswordPage = () => {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = new URLSearchParams(location.search).get(\"email\");\n  const handleReset = async e => {\n    e.preventDefault();\n    if (!email || !password || password !== confirmPassword) {\n      setError(\"Passwords must match and cannot be empty.\");\n      return;\n    }\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const res = await resetPassword(email, password);\n      if (res.success) {\n        navigate(\"/login\");\n      } else {\n        setError(res.message || \"Reset failed.\");\n      }\n    } catch {\n      setError(\"Something went wrong.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"login-title\",\n            children: \"Reset Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"login-subtitle\",\n            children: \"Enter and confirm your new password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleReset,\n            className: \"login-form\",\n            children: [/*#__PURE__*/_jsxDEV(InputField, {\n              label: \"New Password\",\n              type: \"password\",\n              value: password,\n              onChange: setPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              label: \"Confirm Password\",\n              type: \"password\",\n              value: confirmPassword,\n              onChange: setConfirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"login-button\",\n              disabled: isLoading,\n              children: isLoading ? \"Resetting...\" : \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-prompt\",\n            children: [\"Back to\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/login\",\n              className: \"register-link\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-image\",\n          style: {\n            backgroundImage: \"url('https://imgur.com/WAekdBQ.jpg')\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-overlay\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"promo-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Experience Movies Like Never Before\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Book tickets, earn rewards, and enjoy exclusive offers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPasswordPage, \"gAIV/WLRTNOH8amUbVMBVGRaYPU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResetPasswordPage;\nexport default ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","Navbar","Footer","InputField","resetPassword","jsxDEV","_jsxDEV","ResetPasswordPage","_s","password","setPassword","confirmPassword","setConfirmPassword","error","setError","isLoading","setIsLoading","navigate","location","email","URLSearchParams","search","get","handleReset","e","preventDefault","res","success","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","value","onChange","disabled","href","style","backgroundImage","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/users/pages/ResetPasswordPage.tsx"],"sourcesContent":["// src/pages/auth/ResetPasswordPage.tsx\r\nimport React, { useState } from \"react\"\r\nimport { useNavigate, useLocation } from \"react-router-dom\"\r\nimport Navbar from \"../../components/Navbar\"\r\nimport Footer from \"../../components/Footer\"\r\nimport InputField from \"../../components/InputField\"\r\nimport { resetPassword } from \"../../services/authService\"\r\nimport \"../styles/login_page.css\"\r\n\r\nconst ResetPasswordPage = () => {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const email = new URLSearchParams(location.search).get(\"email\")\r\n\r\n    const handleReset = async (e: React.FormEvent) => {\r\n        e.preventDefault()\r\n\r\n        if (!email || !password || password !== confirmPassword) {\r\n            setError(\"Passwords must match and cannot be empty.\")\r\n            return\r\n        }\r\n\r\n        setIsLoading(true)\r\n        setError(\"\")\r\n\r\n        try {\r\n            const res = await resetPassword(email, password)\r\n            if (res.success) {\r\n                navigate(\"/login\")\r\n            } else {\r\n                setError(res.message || \"Reset failed.\")\r\n            }\r\n        } catch {\r\n            setError(\"Something went wrong.\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-page-container\">\r\n            <Navbar />\r\n\r\n            <div className=\"login-content\">\r\n                <div className=\"login-form-container\">\r\n                    <div className=\"login-form-wrapper\">\r\n                        <h1 className=\"login-title\">Reset Your Password</h1>\r\n                        <p className=\"login-subtitle\">Enter and confirm your new password</p>\r\n\r\n                        {error && <div className=\"error-message\">{error}</div>}\r\n\r\n                        <form onSubmit={handleReset} className=\"login-form\">\r\n                            <InputField\r\n                                label=\"New Password\"\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={setPassword}\r\n                            />\r\n                            <InputField\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                value={confirmPassword}\r\n                                onChange={setConfirmPassword}\r\n                            />\r\n\r\n                            <button type=\"submit\" className=\"login-button\" disabled={isLoading}>\r\n                                {isLoading ? \"Resetting...\" : \"Reset Password\"}\r\n                            </button>\r\n                        </form>\r\n\r\n                        <div className=\"register-prompt\">\r\n                            Back to{\" \"}\r\n                            <a href=\"/login\" className=\"register-link\">\r\n                                Login\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"login-image-container\">\r\n                    <div\r\n                        className=\"login-image\"\r\n                        style={{ backgroundImage: \"url('https://imgur.com/WAekdBQ.jpg')\" }}\r\n                    >\r\n                        <div className=\"image-overlay\">\r\n                            <div className=\"promo-content\">\r\n                                <h2>Experience Movies Like Never Before</h2>\r\n                                <p>Book tickets, earn rewards, and enjoy exclusive offers</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPasswordPage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}