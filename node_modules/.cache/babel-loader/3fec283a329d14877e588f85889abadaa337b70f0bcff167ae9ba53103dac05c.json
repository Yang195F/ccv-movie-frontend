{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iamfo\\\\OneDrive\\\\Documents\\\\ccv-movie-frontend\\\\src\\\\pages\\\\SeatBookingPage.tsx\",\n  _s = $RefreshSig$();\n// /pages/seat-booking/[id].tsx (if dynamic)\nimport { useParams } from \"react-router-dom\";\nimport { mockMovies, mockSeats } from \"../data/mockData\";\nimport Seat from \"../components/Seat\";\nimport ScreenHeader from \"../components/ScreenHeader\";\nimport SeatLegend from \"../components/SeatLegend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeatBookingPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // movie ID\n  const [selectedSeats, setSelectedSeats] = useState([]);\n  const showtime = mockSeats.find(s => s.movieId === Number(id) && s.date === \"2025-04-09\" && s.time === \"12:30 PM\" && s.cinema === \"1 Utama\");\n  const movie = mockMovies.find(m => m.id === Number(id));\n  const toggleSeat = seatId => {\n    setSelectedSeats(prev => prev.includes(seatId) ? prev.filter(s => s !== seatId) : [...prev, seatId]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seat-booking-container\",\n    children: [/*#__PURE__*/_jsxDEV(ScreenHeader, {\n      title: (movie === null || movie === void 0 ? void 0 : movie.title) || \"Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SeatLegend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"seat-grid\",\n      children: showtime === null || showtime === void 0 ? void 0 : showtime.seats.map(seat => /*#__PURE__*/_jsxDEV(Seat, {\n        seat: seat,\n        isSelected: selectedSeats.includes(seat.id),\n        onClick: () => seat.status === \"available\" && toggleSeat(seat.id)\n      }, seat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Seats: \", selectedSeats.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !selectedSeats.length,\n        children: \"Confirm Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SeatBookingPage, \"KFw5sQixNfywXBdvwwMz66gEKxA=\", false, function () {\n  return [useParams];\n});\n_c = SeatBookingPage;\nexport default SeatBookingPage;\nvar _c;\n$RefreshReg$(_c, \"SeatBookingPage\");","map":{"version":3,"names":["useParams","mockMovies","mockSeats","Seat","ScreenHeader","SeatLegend","jsxDEV","_jsxDEV","SeatBookingPage","_s","id","selectedSeats","setSelectedSeats","useState","showtime","find","s","movieId","Number","date","time","cinema","movie","m","toggleSeat","seatId","prev","includes","filter","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","seats","map","seat","isSelected","onClick","status","join","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/iamfo/OneDrive/Documents/ccv-movie-frontend/src/pages/SeatBookingPage.tsx"],"sourcesContent":["// /pages/seat-booking/[id].tsx (if dynamic)\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { mockMovies, mockSeats } from \"../data/mockData\";\r\nimport Seat from \"../components/Seat\";\r\nimport ScreenHeader from \"../components/ScreenHeader\";\r\nimport SeatLegend from \"../components/SeatLegend\";\r\n\r\nconst SeatBookingPage = () => {\r\n  const { id } = useParams(); // movie ID\r\n  const [selectedSeats, setSelectedSeats] = useState<string[]>([]);\r\n\r\n  const showtime = mockSeats.find(\r\n    (s) =>\r\n      s.movieId === Number(id) &&\r\n      s.date === \"2025-04-09\" &&\r\n      s.time === \"12:30 PM\" &&\r\n      s.cinema === \"1 Utama\"\r\n  );\r\n  const movie = mockMovies.find((m) => m.id === Number(id));\r\n\r\n  const toggleSeat = (seatId: string) => {\r\n    setSelectedSeats((prev) =>\r\n      prev.includes(seatId)\r\n        ? prev.filter((s) => s !== seatId)\r\n        : [...prev, seatId]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"seat-booking-container\">\r\n      <ScreenHeader title={movie?.title || \"Screen\"} />\r\n      <SeatLegend />\r\n      <div className=\"seat-grid\">\r\n        {showtime?.seats.map((seat) => (\r\n          <Seat\r\n            key={seat.id}\r\n            seat={seat}\r\n            isSelected={selectedSeats.includes(seat.id)}\r\n            onClick={() => seat.status === \"available\" && toggleSeat(seat.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"bottom-bar\">\r\n        <p>Selected Seats: {selectedSeats.join(\", \")}</p>\r\n        <button disabled={!selectedSeats.length}>Confirm Booking</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeatBookingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}