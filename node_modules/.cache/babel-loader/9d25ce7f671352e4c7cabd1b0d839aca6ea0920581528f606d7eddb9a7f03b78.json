{"ast":null,"code":"import apiRoutes from \"../config/apiRoutes\";\nexport const getScreeningWithSeats = async screeningId => {\n  try {\n    const res = await fetch(`${apiRoutes.screenings.getDetails(screeningId)}`);\n    const data = await res.json();\n    if (!res.ok) {\n      throw new Error(data.message || \"Failed to fetch screening data\");\n    }\n    return {\n      success: true,\n      data: data.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message\n    };\n  }\n};","map":{"version":3,"names":["apiRoutes","getScreeningWithSeats","screeningId","res","fetch","screenings","getDetails","data","json","ok","Error","message","success","error"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/services/screeningService.ts"],"sourcesContent":["import apiRoutes from \"../config/apiRoutes\";\r\n\r\nexport const getScreeningWithSeats = async (screeningId: string) => {\r\n    try {\r\n        const res = await fetch(`${apiRoutes.screenings.getDetails(screeningId)}`);\r\n        const data = await res.json();\r\n\r\n        if (!res.ok) {\r\n            throw new Error(data.message || \"Failed to fetch screening data\");\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            data: data.data,\r\n        };\r\n    } catch (error: any) {\r\n        return {\r\n            success: false,\r\n            message: error.message,\r\n        };\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,qBAAqB;AAE3C,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,WAAmB,IAAK;EAChE,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,SAAS,CAACK,UAAU,CAACC,UAAU,CAACJ,WAAW,CAAC,EAAE,CAAC;IAC1E,MAAMK,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;IAE7B,IAAI,CAACL,GAAG,CAACM,EAAE,EAAE;MACT,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,gCAAgC,CAAC;IACrE;IAEA,OAAO;MACHC,OAAO,EAAE,IAAI;MACbL,IAAI,EAAEA,IAAI,CAACA;IACf,CAAC;EACL,CAAC,CAAC,OAAOM,KAAU,EAAE;IACjB,OAAO;MACHD,OAAO,EAAE,KAAK;MACdD,OAAO,EAAEE,KAAK,CAACF;IACnB,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}