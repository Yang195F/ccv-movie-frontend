{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iamfo\\\\Documents\\\\ccv-movie-frontend\\\\src\\\\components\\\\DateTab.tsx\";\n// components/DateTabBar.tsx\nimport React from \"react\";\nimport \"../users/styles/date_tab.css\"; // or wherever your styles live\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateTabBar = ({\n  availableDates,\n  selectedDate,\n  onDateSelect\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date-tab-bar\",\n    children: availableDates.map(date => {\n      const label = new Date(date).toLocaleDateString(\"en\", {\n        weekday: \"short\",\n        day: \"numeric\",\n        month: \"short\"\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `date-tab ${selectedDate === date ? \"active\" : \"\"}`,\n        onClick: () => onDateSelect(date),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date-text\",\n          children: label.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = DateTabBar;\nexport default DateTabBar;\nvar _c;\n$RefreshReg$(_c, \"DateTabBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DateTabBar","availableDates","selectedDate","onDateSelect","className","children","map","date","label","Date","toLocaleDateString","weekday","day","month","onClick","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/iamfo/Documents/ccv-movie-frontend/src/components/DateTab.tsx"],"sourcesContent":["// components/DateTabBar.tsx\r\nimport React from \"react\";\r\nimport \"../users/styles/date_tab.css\"; // or wherever your styles live\r\n\r\nexport interface DateTabBarProps {\r\n  availableDates: string[];\r\n  selectedDate: string;\r\n  onDateSelect: (date: string) => void;\r\n}\r\n\r\nconst DateTabBar: React.FC<DateTabBarProps> = ({\r\n  availableDates,\r\n  selectedDate,\r\n  onDateSelect,\r\n}) => {\r\n  return (\r\n    <div className=\"date-tab-bar\">\r\n      {availableDates.map((date) => {\r\n        const label = new Date(date).toLocaleDateString(\"en\", {\r\n          weekday: \"short\",\r\n          day: \"numeric\",\r\n          month: \"short\",\r\n        });\r\n\r\n        return (\r\n          <div\r\n            key={date}\r\n            className={`date-tab ${selectedDate === date ? \"active\" : \"\"}`}\r\n            onClick={() => onDateSelect(date)}\r\n          >\r\n            <span className=\"date-text\">{label.toUpperCase()}</span>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateTabBar;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQvC,MAAMC,UAAqC,GAAGA,CAAC;EAC7CC,cAAc;EACdC,YAAY;EACZC;AACF,CAAC,KAAK;EACJ,oBACEJ,OAAA;IAAKK,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BJ,cAAc,CAACK,GAAG,CAAEC,IAAI,IAAK;MAC5B,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC,CAACG,kBAAkB,CAAC,IAAI,EAAE;QACpDC,OAAO,EAAE,OAAO;QAChBC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE;MACT,CAAC,CAAC;MAEF,oBACEd,OAAA;QAEEK,SAAS,EAAE,YAAYF,YAAY,KAAKK,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC/DO,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAACI,IAAI,CAAE;QAAAF,QAAA,eAElCN,OAAA;UAAMK,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEG,KAAK,CAACO,WAAW,CAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAJnDZ,IAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKN,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA1BIpB,UAAqC;AA4B3C,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}