{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iamfo\\\\OneDrive\\\\Documents\\\\ccv-movie-frontend\\\\src\\\\pages\\\\RegisterPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/pages_styles.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport InputField from \"../components/InputField\";\nimport { register } from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleRegister = async () => {\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    const result = await register(userId, password);\n    if (result.success) {\n      console.log(result.data);\n      setSuccessMessage(\"Registration successful! You can now log in.\");\n      setError(\"\");\n    } else {\n      setError(result.message);\n      console.log(result.message);\n      setSuccessMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"User Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: [\"Registration Failed\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"User ID\",\n        type: \"text\",\n        value: userId,\n        onChange: setUserId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Password\",\n        type: \"password\",\n        value: password,\n        onChange: setPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Confirm Password\",\n        type: \"password\",\n        value: confirmPassword,\n        onChange: setConfirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        className: \"register-button\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/\"),\n        className: \"back-to-login-button\",\n        children: \"Back to login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"HyuD9aWrgR/ugFIUSkifcrA0Xzs=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useNavigate","InputField","register","jsxDEV","_jsxDEV","RegisterPage","_s","userId","setUserId","password","setPassword","confirmPassword","setConfirmPassword","error","setError","successMessage","setSuccessMessage","navigate","handleRegister","result","success","console","log","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","type","value","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/iamfo/OneDrive/Documents/ccv-movie-frontend/src/pages/RegisterPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/pages_styles.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport InputField from \"../components/InputField\";\r\nimport { register } from \"../services/authService\";\r\n\r\nconst RegisterPage: React.FC = () => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async () => {\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    const result = await register(userId, password);\r\n\r\n    if (result.success) {\r\n      console.log(result.data);\r\n      setSuccessMessage(\"Registration successful! You can now log in.\");\r\n      setError(\"\");\r\n    } else {\r\n      setError(result.message);\r\n      console.log(result.message);\r\n      setSuccessMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"login-box\">\r\n        <h2 className=\"title\">User Registration</h2>\r\n        {error && (\r\n          <p className=\"error-message\">\r\n            Registration Failed\r\n            <br />\r\n            {error}\r\n          </p>\r\n        )}\r\n        {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n        <InputField\r\n          label=\"User ID\"\r\n          type=\"text\"\r\n          value={userId}\r\n          onChange={setUserId}\r\n        />\r\n        <InputField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={setPassword}\r\n        />\r\n        <InputField\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          value={confirmPassword}\r\n          onChange={setConfirmPassword}\r\n        />\r\n        <button onClick={handleRegister} className=\"register-button\">\r\n          Register\r\n        </button>\r\n        <button onClick={() => navigate(\"/\")} className=\"back-to-login-button\">\r\n          Back to login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,4BAA4B;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,MAAMkB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAIT,QAAQ,KAAKE,eAAe,EAAE;MAChCG,QAAQ,CAAC,wBAAwB,CAAC;MAClC;IACF;IAEA,MAAMK,MAAM,GAAG,MAAMjB,QAAQ,CAACK,MAAM,EAAEE,QAAQ,CAAC;IAE/C,IAAIU,MAAM,CAACC,OAAO,EAAE;MAClBC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,IAAI,CAAC;MACxBP,iBAAiB,CAAC,8CAA8C,CAAC;MACjEF,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,MAAM;MACLA,QAAQ,CAACK,MAAM,CAACK,OAAO,CAAC;MACxBH,OAAO,CAACC,GAAG,CAACH,MAAM,CAACK,OAAO,CAAC;MAC3BR,iBAAiB,CAAC,EAAE,CAAC;IACvB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBtB,OAAA;MAAKqB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBtB,OAAA;QAAIqB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3CjB,KAAK,iBACJT,OAAA;QAAGqB,SAAS,EAAC,eAAe;QAAAC,QAAA,GAAC,qBAE3B,eAAAtB,OAAA;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACLjB,KAAK;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACJ,EACAf,cAAc,iBAAIX,OAAA;QAAGqB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAEX;MAAc;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtE1B,OAAA,CAACH,UAAU;QACT8B,KAAK,EAAC,SAAS;QACfC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE1B,MAAO;QACd2B,QAAQ,EAAE1B;MAAU;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACF1B,OAAA,CAACH,UAAU;QACT8B,KAAK,EAAC,UAAU;QAChBC,IAAI,EAAC,UAAU;QACfC,KAAK,EAAExB,QAAS;QAChByB,QAAQ,EAAExB;MAAY;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACF1B,OAAA,CAACH,UAAU;QACT8B,KAAK,EAAC,kBAAkB;QACxBC,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEtB,eAAgB;QACvBuB,QAAQ,EAAEtB;MAAmB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACF1B,OAAA;QAAQ+B,OAAO,EAAEjB,cAAe;QAACO,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAE7D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT1B,OAAA;QAAQ+B,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAAC,GAAG,CAAE;QAACQ,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAEvE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CAlEID,YAAsB;EAAA,QAMTL,WAAW;AAAA;AAAAoC,EAAA,GANxB/B,YAAsB;AAoE5B,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}