{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ccv-movie-frontend\\\\src\\\\components\\\\Location.tsx\";\nimport React from \"react\";\nimport { mockCinemas } from \"../data/mockData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Locations = ({\n  selectedLocations,\n  setSelectedLocations\n}) => {\n  const toggleLocation = location => {\n    setSelectedLocations(prev => prev.includes(location) ? prev.filter(loc => loc !== location) : [...prev, location]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"locations\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), mockCinemas.map(cinema => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: selectedLocations.includes(cinema.name) ? \"selected\" : \"\",\n      onClick: () => toggleLocation(cinema.name),\n      children: cinema.name\n    }, cinema.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Locations;\nexport default Locations;\nvar _c;\n$RefreshReg$(_c, \"Locations\");","map":{"version":3,"names":["React","mockCinemas","jsxDEV","_jsxDEV","Locations","selectedLocations","setSelectedLocations","toggleLocation","location","prev","includes","filter","loc","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cinema","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/components/Location.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { mockCinemas } from \"../data/mockData\"\r\n\r\ninterface CinemaLocationsProps {\r\n  selectedLocations: string[];\r\n  setSelectedLocations: React.Dispatch<React.SetStateAction<string[]>>;\r\n}\r\n\r\nconst Locations: React.FC<CinemaLocationsProps> = ({ selectedLocations, setSelectedLocations }) => {\r\n  const toggleLocation = (location: string) => {\r\n    setSelectedLocations((prev) =>\r\n      prev.includes(location) ? prev.filter((loc) => loc !== location) : [...prev, location]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"locations\">\r\n      <label></label>\r\n      {mockCinemas.map((cinema) => (\r\n        <button\r\n          key={cinema.name}\r\n          className={selectedLocations.includes(cinema.name) ? \"selected\" : \"\"}\r\n          onClick={() => toggleLocation(cinema.name)}\r\n        >\r\n          {cinema.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Locations;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAO9C,MAAMC,SAAyC,GAAGA,CAAC;EAAEC,iBAAiB;EAAEC;AAAqB,CAAC,KAAK;EACjG,MAAMC,cAAc,GAAIC,QAAgB,IAAK;IAC3CF,oBAAoB,CAAEG,IAAI,IACxBA,IAAI,CAACC,QAAQ,CAACF,QAAQ,CAAC,GAAGC,IAAI,CAACE,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAKJ,QAAQ,CAAC,GAAG,CAAC,GAAGC,IAAI,EAAED,QAAQ,CACvF,CAAC;EACH,CAAC;EAED,oBACEL,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBX,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,EACdjB,WAAW,CAACkB,GAAG,CAAEC,MAAM,iBACtBjB,OAAA;MAEEU,SAAS,EAAER,iBAAiB,CAACK,QAAQ,CAACU,MAAM,CAACC,IAAI,CAAC,GAAG,UAAU,GAAG,EAAG;MACrEC,OAAO,EAAEA,CAAA,KAAMf,cAAc,CAACa,MAAM,CAACC,IAAI,CAAE;MAAAP,QAAA,EAE1CM,MAAM,CAACC;IAAI,GAJPD,MAAM,CAACC,IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACK,EAAA,GArBInB,SAAyC;AAuB/C,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}