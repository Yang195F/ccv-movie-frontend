{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\iamfo\\\\OneDrive\\\\Documents\\\\ccv-movie-frontend\\\\src\\\\users\\\\pages\\\\SeatBookingPage.tsx\",\n  _s = $RefreshSig$();\nimport { useSearchParams, useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { mockMovies, mockSeats } from \"../../data/mockData\";\nimport ScreenHeader from \"../../components/ScreenHeader\";\nimport Seat from \"../../components/Seat\";\nimport SeatLegend from \"../../components/SeatLegend\";\nimport Navbar from \"../../components/Navbar\";\nimport Footer from \"../../components/Footer\";\nimport \"../styles/seat_booking.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SeatBookingPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // movie ID\n  const [searchParams] = useSearchParams(); // ‚úÖ Destructure correctly\n\n  const [selectedSeats, setSelectedSeats] = useState([]);\n  const cinema = searchParams.get(\"cinema\");\n  const date = searchParams.get(\"date\");\n  const time = searchParams.get(\"time\");\n  const showtime = mockSeats.find(s => s.movieId === Number(id) && s.cinema === cinema && s.date === date && s.time === time);\n  const handleToggle = seatId => {\n    setSelectedSeats(prev => prev.includes(seatId) ? prev.filter(s => s !== seatId) : [...prev, seatId]);\n  };\n  const movie = mockMovies.find(m => m.id === Number(id));\n  if (!movie || !showtime) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"not-found\",\n        children: \"Showtime not found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"seat-booking-container\",\n      children: [/*#__PURE__*/_jsxDEV(ScreenHeader, {\n        movieTitle: movie.title,\n        cinema: showtime.cinema,\n        date: showtime.date,\n        time: showtime.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SeatLegend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seat-grid\",\n        children: showtime.seats.map(seat => /*#__PURE__*/_jsxDEV(Seat, {\n          seat: seat,\n          isSelected: selectedSeats.includes(seat.id),\n          onClick: () => seat.status === \"available\" ? handleToggle(seat.id) : null\n        }, seat.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83C\\uDF9F\\uFE0F \", selectedSeats.length, \" Seat(s) Selected\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm-btn\",\n            disabled: !selectedSeats.length,\n            onClick: () => alert(\"Booking Confirmed!\"),\n            children: \"Book Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SeatBookingPage, \"xFjhSNMzJ5oyZv3/dVko7yAw78Y=\", false, function () {\n  return [useParams, useSearchParams];\n});\n_c = SeatBookingPage;\nexport default SeatBookingPage;\nvar _c;\n$RefreshReg$(_c, \"SeatBookingPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useSearchParams","useParams","useState","mockMovies","mockSeats","ScreenHeader","Seat","SeatLegend","Navbar","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","SeatBookingPage","id","searchParams","selectedSeats","setSelectedSeats","cinema","get","date","time","showtime","find","s","movieId","Number","handleToggle","seatId","prev","includes","filter","movie","m","children","fileName","lineNumber","columnNumber","className","movieTitle","title","seats","map","seat","isSelected","onClick","status","length","disabled","alert","_c","$RefreshReg$"],"sources":["C:/Users/iamfo/OneDrive/Documents/ccv-movie-frontend/src/users/pages/SeatBookingPage.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useSearchParams, useParams, useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { mockMovies, mockSeats } from \"../../data/mockData\";\r\nimport ScreenHeader from \"../../components/ScreenHeader\";\r\nimport Seat from \"../../components/Seat\";\r\nimport SeatLegend from \"../../components/SeatLegend\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Footer from \"../../components/Footer\";\r\nimport \"../styles/seat_booking.css\";\r\n\r\nconst SeatBookingPage = () => {\r\n  const { id } = useParams(); // movie ID\r\n  const [searchParams] = useSearchParams(); // ‚úÖ Destructure correctly\r\n\r\n  const [selectedSeats, setSelectedSeats] = useState<string[]>([]);\r\n\r\n  const cinema = searchParams.get(\"cinema\");\r\n  const date = searchParams.get(\"date\");\r\n  const time = searchParams.get(\"time\");\r\n\r\n  const showtime = mockSeats.find(\r\n    (s) =>\r\n      s.movieId === Number(id) &&\r\n      s.cinema === cinema &&\r\n      s.date === date &&\r\n      s.time === time\r\n  );\r\n\r\n  const handleToggle = (seatId: string) => {\r\n    setSelectedSeats((prev) =>\r\n      prev.includes(seatId)\r\n        ? prev.filter((s) => s !== seatId)\r\n        : [...prev, seatId]\r\n    );\r\n  };\r\n  const movie = mockMovies.find((m) => m.id === Number(id));\r\n\r\n  if (!movie || !showtime) {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"not-found\">Showtime not found.</div>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"seat-booking-container\">\r\n        <ScreenHeader\r\n          movieTitle={movie.title}\r\n          cinema={showtime.cinema}\r\n          date={showtime.date}\r\n          time={showtime.time}\r\n        />\r\n\r\n        <SeatLegend />\r\n\r\n        <div className=\"seat-grid\">\r\n          {showtime.seats.map((seat) => (\r\n            <Seat\r\n              key={seat.id}\r\n              seat={seat}\r\n              isSelected={selectedSeats.includes(seat.id)}\r\n              onClick={() =>\r\n                seat.status === \"available\" ? handleToggle(seat.id) : null\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"bottom-bar\">\r\n          <div className=\"summary\">\r\n            <span>üéüÔ∏è {selectedSeats.length} Seat(s) Selected</span>\r\n            <button\r\n              className=\"confirm-btn\"\r\n              disabled={!selectedSeats.length}\r\n              onClick={() => alert(\"Booking Confirmed!\")}\r\n            >\r\n              Book Now\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SeatBookingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}