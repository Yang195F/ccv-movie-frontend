{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iamfo\\\\Documents\\\\ccv-movie-frontend\\\\src\\\\users\\\\pages\\\\SeatBookingPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from \"react\";\nimport \"../styles/seat_booking.css\";\nimport { mockMovies } from \"../../data/mockData\";\nimport { useParams, useSearchParams, useNavigate } from \"react-router-dom\";\nimport { RoomTemplates } from \"../../config/roomTemplate\";\nimport Seat from \"../../components/Seat\"; // adjust path if needed\nimport SeatLegend from \"../../components/SeatLegend\";\nimport { v4 as uuidv4 } from \"uuid\"; // Install via npm if not already: npm install uuid\nimport { getLayoutTypeFromRoomId } from \"../../utils/layoutUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeatBookingPage = () => {\n  _s();\n  var _selectedMovie$screen, _selectedScreening$se, _selectedScreening$se2, _selectedScreening$se3, _selectedMovie$banner, _selectedMovie$title, _selectedMovie$genre, _selectedMovie$durati, _selectedMovie$langua, _selectedMovie$langua2, _seatGrid$;\n  const {\n    id\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const selectedCinema = searchParams.get(\"cinema\");\n  const selectedDate = searchParams.get(\"date\");\n  const selectedTime = searchParams.get(\"time\");\n  const selectedRoom = searchParams.get(\"room\");\n  const roomId = searchParams.get(\"roomId\");\n  const seatGrid = useMemo(() => {\n    var _RoomTemplates$layout;\n    const layout = getLayoutTypeFromRoomId(selectedRoom !== null && selectedRoom !== void 0 ? selectedRoom : \"\");\n    return layout ? (_RoomTemplates$layout = RoomTemplates[layout]) === null || _RoomTemplates$layout === void 0 ? void 0 : _RoomTemplates$layout.generate() : [];\n  }, [selectedRoom]);\n  const [isConfirming, setIsConfirming] = useState(false);\n  const [ticket, setTicket] = useState(null);\n  const handleConfirm = () => {\n    if (!selectedMovie || !selectedSession) return;\n    const ticket = {\n      ticketId: uuidv4(),\n      // generates a unique ID\n      name: \"\",\n      // optional for now\n      email: \"\",\n      // optional for now\n      movieTitle: selectedMovie.title,\n      cinemaName: selectedCinema !== null && selectedCinema !== void 0 ? selectedCinema : \"\",\n      roomName: selectedRoom !== null && selectedRoom !== void 0 ? selectedRoom : \"\",\n      date: selectedDate !== null && selectedDate !== void 0 ? selectedDate : \"\",\n      time: selectedTime !== null && selectedTime !== void 0 ? selectedTime : \"\",\n      seats: selectedSeats,\n      language: selectedMovie.languages.join(\", \"),\n      genre: selectedMovie.genre,\n      rating: selectedMovie.rating,\n      duration: selectedMovie.duration,\n      bookedAt: new Date().toISOString()\n    };\n    console.log(\"✅ Ticket created:\", ticket);\n  };\n  const selectedMovie = mockMovies.find(m => m.id === Number(id));\n  const selectedScreening = selectedMovie === null || selectedMovie === void 0 ? void 0 : (_selectedMovie$screen = selectedMovie.screenings) === null || _selectedMovie$screen === void 0 ? void 0 : _selectedMovie$screen.find(s => s.cinema === selectedCinema);\n  const otherSessionsSameCinema = selectedScreening === null || selectedScreening === void 0 ? void 0 : (_selectedScreening$se = selectedScreening.sessions) === null || _selectedScreening$se === void 0 ? void 0 : _selectedScreening$se.filter(sess => sess.date === selectedDate && sess.time !== selectedTime &&\n  // exclude the current one\n  sess.status !== \"sold out\");\n  const selectedSession = (_selectedScreening$se2 = selectedScreening === null || selectedScreening === void 0 ? void 0 : (_selectedScreening$se3 = selectedScreening.sessions) === null || _selectedScreening$se3 === void 0 ? void 0 : _selectedScreening$se3.find(session => session.date === selectedDate && session.time === selectedTime)) !== null && _selectedScreening$se2 !== void 0 ? _selectedScreening$se2 : undefined;\n  const [selectedSeats, setSelectedSeats] = useState([]);\n  const soldSeats = [\"E1\", \"E2\"];\n  const handleSeatClick = seat => {\n    if (soldSeats.includes(seat)) return;\n    setSelectedSeats(prev => prev.includes(seat) ? prev.filter(s => s !== seat) : [...prev, seat]);\n  };\n  const getSeatStatus = seat => {\n    if (selectedSeats.includes(seat)) return \"selected\";\n    if (soldSeats.includes(seat)) return \"sold\";\n    return \"available\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seat-booking-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner-section\",\n      style: {\n        backgroundImage: `url(${(_selectedMovie$banner = selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.banner) !== null && _selectedMovie$banner !== void 0 ? _selectedMovie$banner : \"\"})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"booking-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back-button\",\n              children: \"\\u2190\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-step active\",\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-line\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-step inactive\",\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-button\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"movie-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"movie-title\",\n            children: (_selectedMovie$title = selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.title) !== null && _selectedMovie$title !== void 0 ? _selectedMovie$title : \"Movie Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-meta\",\n            children: [(_selectedMovie$genre = selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.genre) !== null && _selectedMovie$genre !== void 0 ? _selectedMovie$genre : \"Genre\", \" |\", \" \", (_selectedMovie$durati = selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.duration) !== null && _selectedMovie$durati !== void 0 ? _selectedMovie$durati : \"Duration\", \" |\", \" \", (_selectedMovie$langua = selectedMovie === null || selectedMovie === void 0 ? void 0 : (_selectedMovie$langua2 = selectedMovie.languages) === null || _selectedMovie$langua2 === void 0 ? void 0 : _selectedMovie$langua2.join(\", \")) !== null && _selectedMovie$langua !== void 0 ? _selectedMovie$langua : \"Language\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-tag\",\n              children: selectedCinema || \"Cinema\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-tag\",\n              children: (selectedRoom === null || selectedRoom === void 0 ? void 0 : selectedRoom.replace(\"room\", \"Room \")) || \"Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-tag\",\n              children: [selectedDate || \"Date\", \", \", selectedTime || \"Time\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"showtimes-label\",\n            children: [\"Other Showtimes at \", selectedCinema || \"this cinema\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"showtimes-container\",\n            children: otherSessionsSameCinema !== null && otherSessionsSameCinema !== void 0 && otherSessionsSameCinema.length ? otherSessionsSameCinema.map(session => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"showtime-button\",\n              onClick: () => navigate(`/booking/${selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.id}?cinema=${encodeURIComponent(selectedCinema !== null && selectedCinema !== void 0 ? selectedCinema : \"\")}&date=${session.date}&time=${session.time}&room=${session.roomId}`),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: session.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"showtime-date\",\n                children: session.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this)]\n            }, session.time, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No other showtimes available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"booking-body\",\n      children: [/*#__PURE__*/_jsxDEV(SeatLegend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"screen-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/icons/screen.jpg\" // replace with actual path\n          ,\n          alt: \"Cinema Screen\",\n          className: \"screen-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"seats-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"seat-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-label empty-cell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), (_seatGrid$ = seatGrid[0]) === null || _seatGrid$ === void 0 ? void 0 : _seatGrid$.map((_, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-label col-label\",\n            children: colIndex + 1\n          }, `col-${colIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)), seatGrid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid-label row-label\",\n              children: row[0].row\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), row.map(seat => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seat-cell\",\n              children: /*#__PURE__*/_jsxDEV(Seat, {\n                seat: seat,\n                isSelected: selectedSeats.includes(seat.id),\n                onClick: () => handleSeatClick(seat.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this)\n            }, seat.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this))]\n          }, `row-${rowIndex}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"book-button\",\n          disabled: selectedSeats.length === 0,\n          onClick: () => setIsConfirming(true),\n          children: \"BOOK SEATS!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), isConfirming && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Confirm Your Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You have selected \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: selectedSeats.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 31\n        }, this), \" seat(s):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedSeats.join(\", \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"confirm-button\",\n        onClick: () => {\n          const newTicket = {\n            movie: selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.title,\n            cinema: selectedCinema,\n            date: selectedDate,\n            time: selectedTime,\n            room: selectedRoom,\n            seats: selectedSeats,\n            user: {\n              name: \"John Doe\",\n              // you can replace this later with real user input\n              email: \"john@example.com\"\n            }\n          };\n          setTicket(newTicket);\n          setIsConfirming(false);\n          alert(\"🎫 Ticket booked successfully!\");\n          console.log(\"TICKET:\", newTicket);\n        },\n        children: \"Confirm Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsConfirming(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(SeatBookingPage, \"1EIokoKXIBMILtYpuCbXSvvQ4XM=\", false, function () {\n  return [useParams, useSearchParams, useNavigate];\n});\n_c = SeatBookingPage;\nexport default SeatBookingPage;\nvar _c;\n$RefreshReg$(_c, \"SeatBookingPage\");","map":{"version":3,"names":["React","useMemo","useState","mockMovies","useParams","useSearchParams","useNavigate","RoomTemplates","Seat","SeatLegend","v4","uuidv4","getLayoutTypeFromRoomId","jsxDEV","_jsxDEV","SeatBookingPage","_s","_selectedMovie$screen","_selectedScreening$se","_selectedScreening$se2","_selectedScreening$se3","_selectedMovie$banner","_selectedMovie$title","_selectedMovie$genre","_selectedMovie$durati","_selectedMovie$langua","_selectedMovie$langua2","_seatGrid$","id","searchParams","navigate","selectedCinema","get","selectedDate","selectedTime","selectedRoom","roomId","seatGrid","_RoomTemplates$layout","layout","generate","isConfirming","setIsConfirming","ticket","setTicket","handleConfirm","selectedMovie","selectedSession","ticketId","name","email","movieTitle","title","cinemaName","roomName","date","time","seats","selectedSeats","language","languages","join","genre","rating","duration","bookedAt","Date","toISOString","console","log","find","m","Number","selectedScreening","screenings","s","cinema","otherSessionsSameCinema","sessions","filter","sess","status","session","undefined","setSelectedSeats","soldSeats","handleSeatClick","seat","includes","prev","getSeatStatus","className","children","style","backgroundImage","banner","fileName","_jsxFileName","lineNumber","columnNumber","replace","length","map","onClick","encodeURIComponent","src","alt","_","colIndex","row","rowIndex","Fragment","isSelected","disabled","newTicket","movie","room","user","alert","_c","$RefreshReg$"],"sources":["C:/Users/iamfo/Documents/ccv-movie-frontend/src/users/pages/SeatBookingPage.tsx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport \"../styles/seat_booking.css\";\r\nimport { mockMovies } from \"../../data/mockData\";\r\nimport { useParams, useSearchParams, useNavigate } from \"react-router-dom\";\r\nimport { RoomTemplates } from \"../../config/roomTemplate\";\r\nimport Seat from \"../../components/Seat\"; // adjust path if needed\r\nimport SeatLegend from \"../../components/SeatLegend\";\r\nimport { v4 as uuidv4 } from \"uuid\"; // Install via npm if not already: npm install uuid\r\nimport { getLayoutTypeFromRoomId } from \"../../utils/layoutUtils\";\r\nimport { Ticket } from \"../../interfaces/ticket\";\r\n\r\nconst SeatBookingPage: React.FC = () => {\r\n  const { id } = useParams();\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const selectedCinema = searchParams.get(\"cinema\");\r\n  const selectedDate = searchParams.get(\"date\");\r\n  const selectedTime = searchParams.get(\"time\");\r\n  const selectedRoom = searchParams.get(\"room\");\r\n  const roomId = searchParams.get(\"roomId\");\r\n  const seatGrid = useMemo(() => {\r\n    const layout = getLayoutTypeFromRoomId(selectedRoom ?? \"\");\r\n    return layout ? RoomTemplates[layout]?.generate() : [];\r\n  }, [selectedRoom]);\r\n\r\n  const [isConfirming, setIsConfirming] = useState(false);\r\n  const [ticket, setTicket] = useState<any | null>(null);\r\n  const handleConfirm = () => {\r\n    if (!selectedMovie || !selectedSession) return;\r\n\r\n    const ticket: Ticket = {\r\n      ticketId: uuidv4(), // generates a unique ID\r\n      name: \"\", // optional for now\r\n      email: \"\", // optional for now\r\n      movieTitle: selectedMovie.title,\r\n      cinemaName: selectedCinema ?? \"\",\r\n      roomName: selectedRoom ?? \"\",\r\n      date: selectedDate ?? \"\",\r\n      time: selectedTime ?? \"\",\r\n      seats: selectedSeats,\r\n      language: selectedMovie.languages.join(\", \"),\r\n      genre: selectedMovie.genre,\r\n      rating: selectedMovie.rating,\r\n      duration: selectedMovie.duration,\r\n      bookedAt: new Date().toISOString(),\r\n    };\r\n\r\n    console.log(\"✅ Ticket created:\", ticket);\r\n  };\r\n\r\n  const selectedMovie = mockMovies.find((m) => m.id === Number(id));\r\n  const selectedScreening = selectedMovie?.screenings?.find(\r\n    (s) => s.cinema === selectedCinema\r\n  );\r\n  const otherSessionsSameCinema = selectedScreening?.sessions?.filter(\r\n    (sess) =>\r\n      sess.date === selectedDate &&\r\n      sess.time !== selectedTime && // exclude the current one\r\n      sess.status !== \"sold out\"\r\n  );\r\n\r\n  const selectedSession =\r\n    selectedScreening?.sessions?.find(\r\n      (session) =>\r\n        session.date === selectedDate && session.time === selectedTime\r\n    ) ?? undefined;\r\n  const [selectedSeats, setSelectedSeats] = useState<string[]>([]);\r\n\r\n  const soldSeats = [\"E1\", \"E2\"];\r\n\r\n  const handleSeatClick = (seat: string) => {\r\n    if (soldSeats.includes(seat)) return;\r\n    setSelectedSeats((prev) =>\r\n      prev.includes(seat) ? prev.filter((s) => s !== seat) : [...prev, seat]\r\n    );\r\n  };\r\n\r\n  const getSeatStatus = (seat: string) => {\r\n    if (selectedSeats.includes(seat)) return \"selected\";\r\n    if (soldSeats.includes(seat)) return \"sold\";\r\n    return \"available\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"seat-booking-wrapper\">\r\n      {/* 🎬 Banner Section with Gradient Fade */}\r\n      <div\r\n        className=\"banner-section\"\r\n        style={{ backgroundImage: `url(${selectedMovie?.banner ?? \"\"})` }}\r\n      >\r\n        <div className=\"banner-overlay\">\r\n          <div className=\"booking-header\">\r\n            <div className=\"header-inner\">\r\n              <button className=\"back-button\">←</button>\r\n\r\n              <div className=\"header-center\">\r\n                <div className=\"progress-indicator\">\r\n                  <div className=\"progress-step active\">1</div>\r\n                  <div className=\"progress-line\"></div>\r\n                  <div className=\"progress-step inactive\">2</div>\r\n                </div>\r\n              </div>\r\n\r\n              <button className=\"close-button\">×</button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 📝 Dynamic Movie Info Section */}\r\n          <section className=\"movie-info\">\r\n            <h1 className=\"movie-title\">\r\n              {selectedMovie?.title ?? \"Movie Title\"}\r\n            </h1>\r\n            <p className=\"movie-meta\">\r\n              {selectedMovie?.genre ?? \"Genre\"} |{\" \"}\r\n              {selectedMovie?.duration ?? \"Duration\"} |{\" \"}\r\n              {selectedMovie?.languages?.join(\", \") ?? \"Language\"}\r\n            </p>\r\n            <div className=\"movie-details\">\r\n              <span className=\"detail-tag\">{selectedCinema || \"Cinema\"}</span>\r\n\r\n              <span className=\"detail-tag\">\r\n                {selectedRoom?.replace(\"room\", \"Room \") || \"Room\"}\r\n              </span>\r\n\r\n              <span className=\"detail-tag\">\r\n                {selectedDate || \"Date\"}, {selectedTime || \"Time\"}\r\n              </span>\r\n            </div>\r\n            <h3 className=\"showtimes-label\">\r\n              Other Showtimes at {selectedCinema || \"this cinema\"}\r\n            </h3>\r\n            <div className=\"showtimes-container\">\r\n              {otherSessionsSameCinema?.length ? (\r\n                otherSessionsSameCinema.map((session) => (\r\n                  <button\r\n                    key={session.time}\r\n                    className=\"showtime-button\"\r\n                    onClick={() =>\r\n                      navigate(\r\n                        `/booking/${\r\n                          selectedMovie?.id\r\n                        }?cinema=${encodeURIComponent(\r\n                          selectedCinema ?? \"\"\r\n                        )}&date=${session.date}&time=${session.time}&room=${\r\n                          session.roomId\r\n                        }`\r\n                      )\r\n                    }\r\n                  >\r\n                    <div>{session.time}</div>\r\n                    <div className=\"showtime-date\">{session.date}</div>\r\n                  </button>\r\n                ))\r\n              ) : (\r\n                <div>No other showtimes available</div>\r\n              )}\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 🎟️ Booking Body Section */}\r\n      <main className=\"booking-body\">\r\n        <SeatLegend />\r\n\r\n        <div className=\"screen-container\">\r\n          <img\r\n            src=\"/assets/icons/screen.jpg\" // replace with actual path\r\n            alt=\"Cinema Screen\"\r\n            className=\"screen-img\"\r\n          />\r\n        </div>\r\n\r\n        <section className=\"seats-container\">\r\n          <div className=\"seat-table\">\r\n            {/* Top-left corner cell (empty) */}\r\n            <div className=\"grid-label empty-cell\" />\r\n\r\n            {/* Column number labels */}\r\n            {seatGrid[0]?.map((_, colIndex) => (\r\n              <div key={`col-${colIndex}`} className=\"grid-label col-label\">\r\n                {colIndex + 1}\r\n              </div>\r\n            ))}\r\n\r\n            {/* Rows with row labels and seat components */}\r\n            {seatGrid.map((row, rowIndex) => (\r\n              <React.Fragment key={`row-${rowIndex}`}>\r\n                {/* Row label (e.g., A, B, C...) */}\r\n                <div className=\"grid-label row-label\">{row[0].row}</div>\r\n\r\n                {/* Render each seat in the row */}\r\n                {row.map((seat) => (\r\n                  <div key={seat.id} className=\"seat-cell\">\r\n                    <Seat\r\n                      seat={seat}\r\n                      isSelected={selectedSeats.includes(seat.id)}\r\n                      onClick={() => handleSeatClick(seat.id)}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </React.Fragment>\r\n            ))}\r\n          </div>\r\n        </section>\r\n\r\n        <div className=\"book-button-container\">\r\n          <button\r\n            className=\"book-button\"\r\n            disabled={selectedSeats.length === 0}\r\n            onClick={() => setIsConfirming(true)}\r\n          >\r\n            BOOK SEATS!\r\n          </button>\r\n        </div>\r\n      </main>\r\n      {isConfirming && (\r\n        <div className=\"confirmation-popup\">\r\n          <h2>Confirm Your Booking</h2>\r\n          <p>\r\n            You have selected <strong>{selectedSeats.length}</strong> seat(s):\r\n          </p>\r\n          <p>{selectedSeats.join(\", \")}</p>\r\n\r\n          <button\r\n            className=\"confirm-button\"\r\n            onClick={() => {\r\n              const newTicket = {\r\n                movie: selectedMovie?.title,\r\n                cinema: selectedCinema,\r\n                date: selectedDate,\r\n                time: selectedTime,\r\n                room: selectedRoom,\r\n                seats: selectedSeats,\r\n                user: {\r\n                  name: \"John Doe\", // you can replace this later with real user input\r\n                  email: \"john@example.com\",\r\n                },\r\n              };\r\n              setTicket(newTicket);\r\n              setIsConfirming(false);\r\n              alert(\"🎫 Ticket booked successfully!\");\r\n              console.log(\"TICKET:\", newTicket);\r\n            }}\r\n          >\r\n            Confirm Booking\r\n          </button>\r\n          <button onClick={() => setIsConfirming(false)}>Cancel</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeatBookingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}