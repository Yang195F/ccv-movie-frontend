{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ccv-movie-frontend\\\\src\\\\components\\\\InputField.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"../users/styles/components_styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputField = ({\n  label,\n  type,\n  value,\n  onChange\n}) => {\n  _s();\n  const [focused, setFocused] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const isPasswordField = type === \"password\";\n  const inputType = isPasswordField ? showPassword ? \"text\" : \"password\" : type;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `input-group ${focused || value ? \"focused\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"input-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: inputType,\n        value: value,\n        onChange: e => onChange(e.target.value),\n        className: \"input-field\",\n        onFocus: () => setFocused(true),\n        onBlur: () => setFocused(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), isPasswordField && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"password-toggle\",\n        onClick: () => setShowPassword(!showPassword),\n        children: showPassword ? \"üëÅÔ∏è\" : \"üëÅÔ∏è‚Äçüó®Ô∏è\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(InputField, \"0gqfVssScYsYWtzpNQt521L78Og=\");\n_c = InputField;\nexport default InputField;\nvar _c;\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","jsxDEV","_jsxDEV","InputField","label","type","value","onChange","focused","setFocused","showPassword","setShowPassword","isPasswordField","inputType","className","children","fileName","lineNumber","columnNumber","e","target","onFocus","onBlur","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/components/InputField.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\nimport { useState } from \"react\"\r\nimport \"../users/styles/components_styles.css\"\r\n\r\ninterface InputFieldProps {\r\n  label: string\r\n  type: string\r\n  value: string\r\n  onChange: (value: string) => void\r\n}\r\n\r\nconst InputField: React.FC<InputFieldProps> = ({ label, type, value, onChange }) => {\r\n  const [focused, setFocused] = useState(false)\r\n  const [showPassword, setShowPassword] = useState(false)\r\n\r\n  const isPasswordField = type === \"password\"\r\n  const inputType = isPasswordField ? (showPassword ? \"text\" : \"password\") : type\r\n\r\n  return (\r\n    <div className={`input-group ${focused || value ? \"focused\" : \"\"}`}>\r\n      <label className=\"input-label\">{label}</label>\r\n      <div className=\"input-wrapper\">\r\n        <input\r\n          type={inputType}\r\n          value={value}\r\n          onChange={(e) => onChange(e.target.value)}\r\n          className=\"input-field\"\r\n          onFocus={() => setFocused(true)}\r\n          onBlur={() => setFocused(false)}\r\n        />\r\n        {isPasswordField && (\r\n          <button type=\"button\" className=\"password-toggle\" onClick={() => setShowPassword(!showPassword)}>\r\n            {showPassword ? \"üëÅÔ∏è\" : \"üëÅÔ∏è‚Äçüó®Ô∏è\"}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputField\r\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAGZ,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,uCAAuC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAS9C,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAT,EAAA;EAClF,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMY,eAAe,GAAGP,IAAI,KAAK,UAAU;EAC3C,MAAMQ,SAAS,GAAGD,eAAe,GAAIF,YAAY,GAAG,MAAM,GAAG,UAAU,GAAIL,IAAI;EAE/E,oBACEH,OAAA;IAAKY,SAAS,EAAE,eAAeN,OAAO,IAAIF,KAAK,GAAG,SAAS,GAAG,EAAE,EAAG;IAAAS,QAAA,gBACjEb,OAAA;MAAOY,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAnB,YAAA;MAAAoB,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9ChB,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5Bb,OAAA;QACEG,IAAI,EAAEQ,SAAU;QAChBP,KAAK,EAAEA,KAAM;QACbC,QAAQ,EAAGY,CAAC,IAAKZ,QAAQ,CAACY,CAAC,CAACC,MAAM,CAACd,KAAK,CAAE;QAC1CQ,SAAS,EAAC,aAAa;QACvBO,OAAO,EAAEA,CAAA,KAAMZ,UAAU,CAAC,IAAI,CAAE;QAChCa,MAAM,EAAEA,CAAA,KAAMb,UAAU,CAAC,KAAK;MAAE;QAAAO,QAAA,EAAAnB,YAAA;QAAAoB,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,EACDN,eAAe,iBACdV,OAAA;QAAQG,IAAI,EAAC,QAAQ;QAACS,SAAS,EAAC,iBAAiB;QAACS,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAAC,CAACD,YAAY,CAAE;QAAAK,QAAA,EAC7FL,YAAY,GAAG,KAAK,GAAG;MAAS;QAAAM,QAAA,EAAAnB,YAAA;QAAAoB,UAAA;QAAAC,YAAA;MAAA,OAC3B,CACT;IAAA;MAAAF,QAAA,EAAAnB,YAAA;MAAAoB,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAF,QAAA,EAAAnB,YAAA;IAAAoB,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAApB,EAAA,CA3BKK,UAAqC;AAAAqB,EAAA,GAArCrB,UAAqC;AA6B3C,eAAeA,UAAU;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}