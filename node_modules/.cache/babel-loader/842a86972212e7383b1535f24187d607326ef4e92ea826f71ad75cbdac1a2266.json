{"ast":null,"code":"import apiRoutes from \"../config/apiRoutes\";\nexport const login = async (userId, password) => {\n  try {\n    const response = await fetch(apiRoutes.auth.login, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: userId,\n        passwordHash: password\n      })\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || \"Login failed!\");\n    }\n    return {\n      success: true,\n      data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.error || \"An unknown error occurred\"\n    };\n  }\n};","map":{"version":3,"names":["apiRoutes","login","userId","password","response","fetch","auth","method","headers","body","JSON","stringify","passwordHash","data","json","ok","Error","message","success","error"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/services/authService.ts"],"sourcesContent":["import apiRoutes from \"../config/apiRoutes\";\r\nexport const login = async (userId: string, password: string) => {\r\n    try {\r\n        const response = await fetch(apiRoutes.auth.login, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                userId: userId,\r\n                passwordHash: password\r\n            }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n            throw new Error(data.message || \"Login failed!\");\r\n        }\r\n\r\n        return { success: true, data };\r\n    } catch (error: any) {\r\n        return { success: false, message: error.error || \"An unknown error occurred\" };\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,SAAS,MAAM,qBAAqB;AAC3C,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,MAAc,EAAEC,QAAgB,KAAK;EAC7D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,SAAS,CAACM,IAAI,CAACL,KAAK,EAAE;MAC/CM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBT,MAAM,EAAEA,MAAM;QACdU,YAAY,EAAET;MAClB,CAAC;IACL,CAAC,CAAC;IAEF,MAAMU,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,eAAe,CAAC;IACpD;IAEA,OAAO;MAAEC,OAAO,EAAE,IAAI;MAAEL;IAAK,CAAC;EAClC,CAAC,CAAC,OAAOM,KAAU,EAAE;IACjB,OAAO;MAAED,OAAO,EAAE,KAAK;MAAED,OAAO,EAAEE,KAAK,CAACA,KAAK,IAAI;IAA4B,CAAC;EAClF;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}