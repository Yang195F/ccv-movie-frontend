{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ccv-movie-frontend\\\\src\\\\components\\\\PosterSlider.tsx\";\nimport React from \"react\";\nimport { mockMovies } from \"../data/mockData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PosterSlider = ({\n  filter\n}) => {\n  // Function to filter movies based on category (e.g., \"today\", \"upcoming\", \"out-dated\")\n  const filteredMovies = mockMovies.filter(movie => {\n    if (filter === \"today\") {\n      // Example logic for filtering movies: only show movies releasing today\n      return new Date(movie.releaseDate).toDateString() === new Date().toDateString();\n    } else if (filter === \"upcoming\") {\n      return new Date(movie.releaseDate) > new Date();\n    } else if (filter === \"out-dated\") {\n      return new Date(movie.releaseDate) < new Date();\n    }\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poster-slider\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-2\",\n      children: \"\\uD83C\\uDFA5 Movie Posters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex overflow-x-scroll gap-4\",\n      children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poster-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.image,\n          alt: movie.title,\n          className: \"w-32 h-48 object-cover rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center mt-2\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = PosterSlider;\nexport default PosterSlider;\nvar _c;\n$RefreshReg$(_c, \"PosterSlider\");","map":{"version":3,"names":["React","mockMovies","jsxDEV","_jsxDEV","PosterSlider","filter","filteredMovies","movie","Date","releaseDate","toDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","image","alt","title","id","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/components/PosterSlider.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { mockMovies } from \"../data/mockData\";\r\n\r\ninterface PosterSliderProps {\r\n  filter: string;\r\n}\r\n\r\nconst PosterSlider: React.FC<PosterSliderProps> = ({ filter }) => {\r\n  // Function to filter movies based on category (e.g., \"today\", \"upcoming\", \"out-dated\")\r\n  const filteredMovies = mockMovies.filter((movie) => {\r\n    if (filter === \"today\") {\r\n      // Example logic for filtering movies: only show movies releasing today\r\n      return new Date(movie.releaseDate).toDateString() === new Date().toDateString();\r\n    } else if (filter === \"upcoming\") {\r\n      return new Date(movie.releaseDate) > new Date();\r\n    } else if (filter === \"out-dated\") {\r\n      return new Date(movie.releaseDate) < new Date();\r\n    }\r\n    return true;\r\n  });\r\n\r\n  return (\r\n    <div className=\"poster-slider\">\r\n      <h2 className=\"text-xl font-semibold mb-2\">ðŸŽ¥ Movie Posters</h2>\r\n      <div className=\"flex overflow-x-scroll gap-4\">\r\n        {filteredMovies.map((movie) => (\r\n          <div key={movie.id} className=\"poster-item\">\r\n            <img src={movie.image} alt={movie.title} className=\"w-32 h-48 object-cover rounded\" />\r\n            <h3 className=\"text-center mt-2\">{movie.title}</h3>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosterSlider;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM9C,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAChE;EACA,MAAMC,cAAc,GAAGL,UAAU,CAACI,MAAM,CAAEE,KAAK,IAAK;IAClD,IAAIF,MAAM,KAAK,OAAO,EAAE;MACtB;MACA,OAAO,IAAIG,IAAI,CAACD,KAAK,CAACE,WAAW,CAAC,CAACC,YAAY,CAAC,CAAC,KAAK,IAAIF,IAAI,CAAC,CAAC,CAACE,YAAY,CAAC,CAAC;IACjF,CAAC,MAAM,IAAIL,MAAM,KAAK,UAAU,EAAE;MAChC,OAAO,IAAIG,IAAI,CAACD,KAAK,CAACE,WAAW,CAAC,GAAG,IAAID,IAAI,CAAC,CAAC;IACjD,CAAC,MAAM,IAAIH,MAAM,KAAK,WAAW,EAAE;MACjC,OAAO,IAAIG,IAAI,CAACD,KAAK,CAACE,WAAW,CAAC,GAAG,IAAID,IAAI,CAAC,CAAC;IACjD;IACA,OAAO,IAAI;EACb,CAAC,CAAC;EAEF,oBACEL,OAAA;IAAKQ,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BT,OAAA;MAAIQ,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChEb,OAAA;MAAKQ,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAC1CN,cAAc,CAACW,GAAG,CAAEV,KAAK,iBACxBJ,OAAA;QAAoBQ,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACzCT,OAAA;UAAKe,GAAG,EAAEX,KAAK,CAACY,KAAM;UAACC,GAAG,EAAEb,KAAK,CAACc,KAAM;UAACV,SAAS,EAAC;QAAgC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtFb,OAAA;UAAIQ,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAEL,KAAK,CAACc;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAF3CT,KAAK,CAACe,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACO,EAAA,GA3BInB,YAAyC;AA6B/C,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}