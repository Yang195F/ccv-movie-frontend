{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ccv-movie-frontend\\\\src\\\\components\\\\PosterUpload.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PosterUpload = ({\n  poster,\n  setPoster\n}) => {\n  const handleImageChange = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPoster(reader.result); // Set the poster using setPoster\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-poster\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poster-box\",\n      onClick: () => {\n        var _document$getElementB;\n        return (_document$getElementB = document.getElementById(\"file-input\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.click();\n      },\n      children: poster ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: poster,\n        alt: \"Movie Poster\",\n        className: \"poster-preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 88\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"file-input\",\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = PosterUpload;\nexport default PosterUpload;\nvar _c;\n$RefreshReg$(_c, \"PosterUpload\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PosterUpload","poster","setPoster","handleImageChange","event","_event$target$files","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","className","children","onClick","_document$getElementB","document","getElementById","click","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","type","accept","onChange","style","display","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/components/PosterUpload.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ninterface PosterUploadProps {\r\n  poster: string | null;\r\n  setPoster: React.Dispatch<React.SetStateAction<string | null>>;\r\n}\r\n\r\nconst PosterUpload: React.FC<PosterUploadProps> = ({ poster, setPoster }) => {\r\n  const handleImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPoster(reader.result as string); // Set the poster using setPoster\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"movie-poster\">\r\n      <div className=\"poster-box\" onClick={() => document.getElementById(\"file-input\")?.click()}>\r\n        {poster ? <img src={poster} alt=\"Movie Poster\" className=\"poster-preview\" /> : <p>No Image</p>}\r\n      </div>\r\n      <input id=\"file-input\" type=\"file\" accept=\"image/*\" onChange={handleImageChange} style={{ display: \"none\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosterUpload;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAC3E,MAAMC,iBAAiB,GAAIC,KAA0C,IAAK;IAAA,IAAAC,mBAAA;IACxE,MAAMC,IAAI,IAAAD,mBAAA,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAqB,CAAC,CAAC;IACpC,IAAIC,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACvBT,SAAS,CAACO,MAAM,CAACG,MAAgB,CAAC,CAAC,CAAC;MACtC,CAAC;MACDH,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,oBACEP,OAAA;IAAKe,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BhB,OAAA;MAAKe,SAAS,EAAC,YAAY;MAACE,OAAO,EAAEA,CAAA;QAAA,IAAAC,qBAAA;QAAA,QAAAA,qBAAA,GAAMC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,cAAAF,qBAAA,uBAArCA,qBAAA,CAAuCG,KAAK,CAAC,CAAC;MAAA,CAAC;MAAAL,QAAA,EACvFd,MAAM,gBAAGF,OAAA;QAAKsB,GAAG,EAAEpB,MAAO;QAACqB,GAAG,EAAC,cAAc;QAACR,SAAS,EAAC;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAG3B,OAAA;QAAAgB,QAAA,EAAG;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3F,CAAC,eACN3B,OAAA;MAAO4B,EAAE,EAAC,YAAY;MAACC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAE3B,iBAAkB;MAAC4B,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5G,CAAC;AAEV,CAAC;AAACO,EAAA,GApBIjC,YAAyC;AAsB/C,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}