{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iamfo\\\\Documents\\\\ccv-movie-frontend\\\\src\\\\pages\\\\MovieDetails.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"../styles/moviedetails.css\";\nimport { mockMovies } from \"../data/mockData\";\n\n// Temporary mock data (replace with API call later)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetail = () => {\n  _s();\n  var _movie$languages, _movie$dates, _movie$screenings;\n  const {\n    id\n  } = useParams();\n  const movie = mockMovies.find(m => m.id === parseInt(id || \"\", 10));\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"white\",\n        padding: \"2rem\"\n      },\n      children: \"Movie not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-banner\",\n      style: {\n        backgroundImage: `url(${movie.banner})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"movie-title\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: movie.genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), \" | \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movie.duration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 42\n          }, this), \" |\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_movie$languages = movie.languages) === null || _movie$languages === void 0 ? void 0 : _movie$languages.join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Dates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dates\",\n        children: (_movie$dates = movie.dates) === null || _movie$dates === void 0 ? void 0 : _movie$dates.map(date => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-tag\",\n          children: new Date(date).toDateString()\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Choose Cinema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), (_movie$screenings = movie.screenings) === null || _movie$screenings === void 0 ? void 0 : _movie$screenings.map(screen => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cinema-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: screen.cinema\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screening-times\",\n          children: screen.times.map(time => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"time-button\",\n            children: time\n          }, time, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, screen.cinema, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetail, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useParams","mockMovies","jsxDEV","_jsxDEV","MovieDetail","_s","_movie$languages","_movie$dates","_movie$screenings","id","movie","find","m","parseInt","style","color","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","className","backgroundImage","banner","title","genre","duration","languages","join","dates","map","date","Date","toDateString","screenings","screen","cinema","times","time","_c","$RefreshReg$"],"sources":["C:/Users/iamfo/Documents/ccv-movie-frontend/src/pages/MovieDetails.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"../styles/moviedetails.css\";\r\nimport { MovieProps } from \"../interfaces/movies\";\r\nimport { mockMovies } from \"../data/mockData\";\r\n\r\n// Temporary mock data (replace with API call later)\r\n\r\nconst MovieDetail: React.FC = () => {\r\n  const { id } = useParams();\r\n  const movie = mockMovies.find((m) => m.id === parseInt(id || \"\", 10));\r\n\r\n  if (!movie) {\r\n    return (\r\n      <div style={{ color: \"white\", padding: \"2rem\" }}>Movie not found.</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"movie-detail\">\r\n      {/* Banner */}\r\n      <div\r\n        className=\"movie-banner\"\r\n        style={{\r\n          backgroundImage: `url(${movie.banner})`,\r\n        }}\r\n      >\r\n        <div className=\"overlay\">\r\n          <h1 className=\"movie-title\">{movie.title}</h1>\r\n          <div className=\"movie-info\">\r\n            <span>{movie.genre}</span> | <span>{movie.duration}</span> |{\" \"}\r\n            <span>{movie.languages?.join(\", \")}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"movie-content\">\r\n        <h3>Available Dates</h3>\r\n        <div className=\"dates\">\r\n          {movie.dates?.map((date) => (\r\n            <div key={date} className=\"date-tag\">\r\n              {new Date(date).toDateString()}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <h3>Choose Cinema</h3>\r\n        {movie.screenings?.map((screen) => (\r\n          <div key={screen.cinema} className=\"cinema-block\">\r\n            <h4>{screen.cinema}</h4>\r\n            <div className=\"screening-times\">\r\n              {screen.times.map((time) => (\r\n                <button key={time} className=\"time-button\">\r\n                  {time}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}