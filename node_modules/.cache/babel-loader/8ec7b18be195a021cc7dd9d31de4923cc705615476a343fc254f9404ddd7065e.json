{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ccv-movie-frontend\\\\src\\\\pages\\\\RegisterPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/pages_styles.css\";\nimport InputField from \"../components/InputField\";\nimport { register } from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const handleRegister = async () => {\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    const result = await register(userId, password);\n    if (result.success) {\n      console.log(\"Registration Successful:\", result.data);\n      setSuccessMessage(\"Registration successful! You can now log in.\");\n      setError(\"\");\n    } else {\n      setError(\"Registration Failed\");\n      console.log(\"Registration Failed:\", result.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"User Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"User ID\",\n        type: \"text\",\n        value: userId,\n        onChange: setUserId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Password\",\n        type: \"password\",\n        value: password,\n        onChange: setPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Confirm Password\",\n        type: \"password\",\n        value: confirmPassword,\n        onChange: setConfirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        className: \"login-button\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/register\"),\n        className: \"register-button\",\n        children: \"Back to login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"C+AcYOBqyvPFG+nFtCBGxuwm/rc=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","InputField","register","jsxDEV","_jsxDEV","RegisterPage","_s","userId","setUserId","password","setPassword","confirmPassword","setConfirmPassword","error","setError","successMessage","setSuccessMessage","handleRegister","result","success","console","log","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","type","value","onChange","onClick","navigate","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/pages/RegisterPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/pages_styles.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport InputField from \"../components/InputField\";\r\nimport { register } from \"../services/authService\";\r\n\r\nconst RegisterPage: React.FC = () => {\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n    const handleRegister = async () => {\r\n        if (password !== confirmPassword) {\r\n            setError(\"Passwords do not match\");\r\n            return;\r\n        }\r\n\r\n        const result = await register(userId, password);\r\n\r\n        if (result.success) {\r\n            console.log(\"Registration Successful:\", result.data);\r\n            setSuccessMessage(\"Registration successful! You can now log in.\");\r\n            setError(\"\");\r\n        } else {\r\n            setError(\"Registration Failed\");\r\n            console.log(\"Registration Failed:\", result.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"login-box\">\r\n                <h2 className=\"title\">User Registration</h2>\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n                {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n                <InputField label=\"User ID\" type=\"text\" value={userId} onChange={setUserId} />\r\n                <InputField label=\"Password\" type=\"password\" value={password} onChange={setPassword} />\r\n                <InputField label=\"Confirm Password\" type=\"password\" value={confirmPassword} onChange={setConfirmPassword} />\r\n                <button onClick={handleRegister} className=\"login-button\">\r\n                    Register\r\n                </button>\r\n                <button onClick={() => navigate(\"/register\")} className=\"register-button\">\r\n                    Back to login\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}