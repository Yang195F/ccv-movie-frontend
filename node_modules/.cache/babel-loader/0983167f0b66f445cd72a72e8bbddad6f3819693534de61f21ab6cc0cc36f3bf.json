{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ccv-movie-frontend\\\\src\\\\users\\\\pages\\\\LandingPage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from \"../../components/Navbar\";\nimport Footer from \"../../components/Footer\";\nimport HeroSlideshow from \"../../components/HeroSlideshow\";\nimport MovieTabs from \"../../components/MovieTabs\";\nimport MovieGrid from \"../../components/MovieGrid\";\nimport { getAllMovies } from \"../../services/movieService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TABS = [\"NOW SHOWING\", \"BOOK EARLY\", \"COMING SOON\", \"ALL\"];\nconst CinemaWebsite = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"NOW SHOWING\");\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const result = await getAllMovies();\n        if (result.success) {\n          setMovies(result.data);\n        } else {\n          setError(result.message || \"Failed to load movie data.\");\n        }\n      } catch (err) {\n        setError(\"Failed to load movie data.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n  const handleTabChange = tab => {\n    if (tab === \"ALL\") navigate(\"/movies\");else setActiveTab(tab);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cinema-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeroSlideshow, {\n      movies: movies.filter(m => m.banner)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"movie-tabs-section\",\n      children: [/*#__PURE__*/_jsxDEV(MovieTabs, {\n        tabs: TABS,\n        activeTab: activeTab,\n        onTabChange: handleTabChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieGrid, {\n        movies: movies.filter(m => m.category === activeTab)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CinemaWebsite, \"A50oE+8Ocu/kkdTbcjVBqBC2pzI=\", false, function () {\n  return [useNavigate];\n});\n_c = CinemaWebsite;\nexport default CinemaWebsite;\nvar _c;\n$RefreshReg$(_c, \"CinemaWebsite\");","map":{"version":3,"names":["useEffect","useState","useNavigate","Navbar","Footer","HeroSlideshow","MovieTabs","MovieGrid","getAllMovies","jsxDEV","_jsxDEV","TABS","CinemaWebsite","_s","activeTab","setActiveTab","movies","setMovies","loading","setLoading","error","setError","navigate","fetchMovies","result","success","data","message","err","handleTabChange","tab","children","fileName","_jsxFileName","lineNumber","columnNumber","className","filter","m","banner","tabs","onTabChange","category","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/users/pages/LandingPage.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Footer from \"../../components/Footer\";\r\nimport HeroSlideshow from \"../../components/HeroSlideshow\";\r\nimport MovieTabs from \"../../components/MovieTabs\";\r\nimport MovieGrid from \"../../components/MovieGrid\";\r\n\r\nimport { MovieProps } from \"../../interfaces/movies\";\r\nimport { getAllMovies } from \"../../services/movieService\";\r\n\r\nconst TABS: string[] = [\"NOW SHOWING\", \"BOOK EARLY\", \"COMING SOON\", \"ALL\"];\r\n\r\nconst CinemaWebsite: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState(\"NOW SHOWING\");\r\n  const [movies, setMovies] = useState<MovieProps[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const result = await getAllMovies();\r\n        if (result.success) {\r\n          setMovies(result.data);\r\n        } else {\r\n          setError(result.message || \"Failed to load movie data.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Failed to load movie data.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const handleTabChange = (tab: string) => {\r\n    if (tab === \"ALL\") navigate(\"/movies\");\r\n    else setActiveTab(tab);\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"cinema-page\">\r\n      <Navbar />\r\n\r\n      <HeroSlideshow movies={movies.filter((m) => m.banner)} />\r\n\r\n      <section className=\"movie-tabs-section\">\r\n        <MovieTabs tabs={TABS} activeTab={activeTab} onTabChange={handleTabChange} />\r\n        <MovieGrid movies={movies.filter((m) => m.category === activeTab)} />\r\n      </section>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CinemaWebsite;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}