{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iamfo\\\\Documents\\\\ccv-movie-frontend\\\\src\\\\users\\\\pages\\\\MoviesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/landing_page.css\";\nimport MovieCard from \"../../components/MovieCards\";\nimport \"../styles/movie_page.css\";\nimport \"../styles/global.css\";\nimport FilterButton from \"../../components/Filter\";\nimport { mockCinemas, mockMovies } from \"../../data/mockData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviesPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(\"NOW SHOWING\");\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [movies, setMovies] = useState([]);\n  const [cinemas, setCinemas] = useState([]);\n  const bannerMovies = movies.filter(movie => movie.banner);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const allGenres = Array.from(new Set(mockMovies.flatMap(m => {\n    var _m$genre;\n    return ((_m$genre = m.genre) === null || _m$genre === void 0 ? void 0 : _m$genre.split(\", \")) || [];\n  })));\n  const tabs = [\"NOW SHOWING\", \"BOOK EARLY\", \"COMING SOON\", \"ALL\"];\n  useEffect(() => {\n    setMovies(mockMovies);\n    setCinemas(mockCinemas);\n    setLoading(false);\n  }, []);\n  const navigateToCinema = (cinemaId, movieId) => {\n    const path = `/showtimes/${cinemaId}${movieId ? `?movie=${movieId}` : \"\"}`;\n    navigate(path);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cinema-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-tabs-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-tabs\",\n          children: [tabs.map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-button ${activeTab === tab ? \"active\" : \"\"}`,\n            onClick: () => {\n              if (tab === \"ALL\") navigate(\"/movies\");\n              setActiveTab(tab);\n            },\n            children: tab\n          }, tab, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"filter-icon\",\n              children: \"\\u2699\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), \" FILTER\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n            genres: allGenres,\n            selectedGenre: selectedGenre,\n            onSelect: setSelectedGenre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-grid-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-grid\",\n          children: movies.filter(movie => {\n            var _movie$genre;\n            const matchesTab = activeTab === \"ALL\" ? true : movie.category === activeTab;\n            const matchesGenre = !selectedGenre || ((_movie$genre = movie.genre) === null || _movie$genre === void 0 ? void 0 : _movie$genre.toLowerCase().includes(selectedGenre.toLowerCase()));\n            return matchesTab && matchesGenre;\n          }).map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(MoviesPage, \"G5TfTNLPwbi1DJGbKd0EQrSdlBg=\", false, function () {\n  return [useNavigate];\n});\n_c = MoviesPage;\nexport default MoviesPage;\nvar _c;\n$RefreshReg$(_c, \"MoviesPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","MovieCard","FilterButton","mockCinemas","mockMovies","jsxDEV","_jsxDEV","MoviesPage","_s","navigate","activeTab","setActiveTab","currentSlide","setCurrentSlide","movies","setMovies","cinemas","setCinemas","bannerMovies","filter","movie","banner","loading","setLoading","error","setError","selectedGenre","setSelectedGenre","allGenres","Array","from","Set","flatMap","m","_m$genre","genre","split","tabs","navigateToCinema","cinemaId","movieId","path","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","tab","onClick","genres","onSelect","_movie$genre","matchesTab","category","matchesGenre","toLowerCase","includes","id","_c","$RefreshReg$"],"sources":["C:/Users/iamfo/Documents/ccv-movie-frontend/src/users/pages/MoviesPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Footer from \"../../components/Footer\";\r\nimport \"../styles/landing_page.css\";\r\nimport MovieCard from \"../../components/MovieCards\";\r\nimport \"../styles/movie_page.css\";\r\nimport \"../styles/global.css\";\r\nimport FilterButton from \"../../components/Filter\";\r\n\r\nimport { MovieProps } from \"../../interfaces/movies\";\r\nimport { CinemaProps } from \"../../interfaces/cinemas\";\r\nimport { mockCinemas, mockMovies } from \"../../data/mockData\";\r\n\r\nconst MoviesPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState<string>(\"NOW SHOWING\");\r\n  const [currentSlide, setCurrentSlide] = useState<number>(0);\r\n  const [movies, setMovies] = useState<MovieProps[]>([]);\r\n  const [cinemas, setCinemas] = useState<CinemaProps[]>([]);\r\n  const bannerMovies = movies.filter((movie) => movie.banner);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedGenre, setSelectedGenre] = useState<string>(\"\");\r\n  const allGenres = Array.from(\r\n    new Set(mockMovies.flatMap((m) => m.genre?.split(\", \") || []))\r\n  );\r\n\r\n  const tabs: string[] = [\"NOW SHOWING\", \"BOOK EARLY\", \"COMING SOON\", \"ALL\"];\r\n\r\n  useEffect(() => {\r\n    setMovies(mockMovies);\r\n    setCinemas(mockCinemas);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const navigateToCinema = (cinemaId: string, movieId?: number) => {\r\n    const path = `/showtimes/${cinemaId}${movieId ? `?movie=${movieId}` : \"\"}`;\r\n    navigate(path);\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"cinema-container\">\r\n      {/* Movie Tabs */}\r\n      <div className=\"movie-tabs-section\">\r\n        <div className=\"tabs-wrapper\">\r\n          <div className=\"movie-tabs\">\r\n            {tabs.map((tab) => (\r\n              <button\r\n                key={tab}\r\n                className={`tab-button ${activeTab === tab ? \"active\" : \"\"}`}\r\n                onClick={() => {\r\n                  if (tab === \"ALL\") navigate(\"/movies\");\r\n                  setActiveTab(tab);\r\n                }}\r\n              >\r\n                {tab}\r\n              </button>\r\n            ))}\r\n\r\n            {/* Filter Button + Dropdown */}\r\n            <button className=\"filter-button\">\r\n              <span className=\"filter-icon\">⚙️</span> FILTER\r\n            </button>\r\n            <FilterButton\r\n              genres={allGenres}\r\n              selectedGenre={selectedGenre}\r\n              onSelect={setSelectedGenre}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"movie-grid-wrapper\">\r\n          <div className=\"movie-grid\">\r\n            {movies\r\n              .filter((movie) => {\r\n                const matchesTab =\r\n                  activeTab === \"ALL\" ? true : movie.category === activeTab;\r\n                const matchesGenre =\r\n                  !selectedGenre ||\r\n                  movie.genre\r\n                    ?.toLowerCase()\r\n                    .includes(selectedGenre.toLowerCase());\r\n                return matchesTab && matchesGenre;\r\n              })\r\n              .map((movie) => (\r\n                <MovieCard key={movie.id} movie={movie} />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAAeC,WAAW,QAAQ,kBAAkB;AAGpD,OAAO,4BAA4B;AACnC,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAO,0BAA0B;AACjC,OAAO,sBAAsB;AAC7B,OAAOC,YAAY,MAAM,yBAAyB;AAIlD,SAASC,WAAW,EAAEC,UAAU,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAS,aAAa,CAAC;EACjE,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAS,CAAC,CAAC;EAC3D,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAe,EAAE,CAAC;EACtD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAgB,EAAE,CAAC;EACzD,MAAMoB,YAAY,GAAGJ,MAAM,CAACK,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC;EAC3D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAS,EAAE,CAAC;EAC9D,MAAM8B,SAAS,GAAGC,KAAK,CAACC,IAAI,CAC1B,IAAIC,GAAG,CAAC3B,UAAU,CAAC4B,OAAO,CAAEC,CAAC;IAAA,IAAAC,QAAA;IAAA,OAAK,EAAAA,QAAA,GAAAD,CAAC,CAACE,KAAK,cAAAD,QAAA,uBAAPA,QAAA,CAASE,KAAK,CAAC,IAAI,CAAC,KAAI,EAAE;EAAA,EAAC,CAC/D,CAAC;EAED,MAAMC,IAAc,GAAG,CAAC,aAAa,EAAE,YAAY,EAAE,aAAa,EAAE,KAAK,CAAC;EAE1EtC,SAAS,CAAC,MAAM;IACdgB,SAAS,CAACX,UAAU,CAAC;IACrBa,UAAU,CAACd,WAAW,CAAC;IACvBoB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,gBAAgB,GAAGA,CAACC,QAAgB,EAAEC,OAAgB,KAAK;IAC/D,MAAMC,IAAI,GAAG,cAAcF,QAAQ,GAAGC,OAAO,GAAG,UAAUA,OAAO,EAAE,GAAG,EAAE,EAAE;IAC1E/B,QAAQ,CAACgC,IAAI,CAAC;EAChB,CAAC;EAED,IAAInB,OAAO,EAAE,oBAAOhB,OAAA;IAAAoC,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAItB,KAAK,EAAE,oBAAOlB,OAAA;IAAAoC,QAAA,EAAMlB;EAAK;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpC,oBACExC,OAAA;IAAKyC,SAAS,EAAC,kBAAkB;IAAAL,QAAA,eAE/BpC,OAAA;MAAKyC,SAAS,EAAC,oBAAoB;MAAAL,QAAA,gBACjCpC,OAAA;QAAKyC,SAAS,EAAC,cAAc;QAAAL,QAAA,eAC3BpC,OAAA;UAAKyC,SAAS,EAAC,YAAY;UAAAL,QAAA,GACxBL,IAAI,CAACW,GAAG,CAAEC,GAAG,iBACZ3C,OAAA;YAEEyC,SAAS,EAAE,cAAcrC,SAAS,KAAKuC,GAAG,GAAG,QAAQ,GAAG,EAAE,EAAG;YAC7DC,OAAO,EAAEA,CAAA,KAAM;cACb,IAAID,GAAG,KAAK,KAAK,EAAExC,QAAQ,CAAC,SAAS,CAAC;cACtCE,YAAY,CAACsC,GAAG,CAAC;YACnB,CAAE;YAAAP,QAAA,EAEDO;UAAG,GAPCA,GAAG;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQF,CACT,CAAC,eAGFxC,OAAA;YAAQyC,SAAS,EAAC,eAAe;YAAAL,QAAA,gBAC/BpC,OAAA;cAAMyC,SAAS,EAAC,aAAa;cAAAL,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,WACzC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTxC,OAAA,CAACJ,YAAY;YACXiD,MAAM,EAAEvB,SAAU;YAClBF,aAAa,EAAEA,aAAc;YAC7B0B,QAAQ,EAAEzB;UAAiB;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENxC,OAAA;QAAKyC,SAAS,EAAC,oBAAoB;QAAAL,QAAA,eACjCpC,OAAA;UAAKyC,SAAS,EAAC,YAAY;UAAAL,QAAA,EACxB5B,MAAM,CACJK,MAAM,CAAEC,KAAK,IAAK;YAAA,IAAAiC,YAAA;YACjB,MAAMC,UAAU,GACd5C,SAAS,KAAK,KAAK,GAAG,IAAI,GAAGU,KAAK,CAACmC,QAAQ,KAAK7C,SAAS;YAC3D,MAAM8C,YAAY,GAChB,CAAC9B,aAAa,MAAA2B,YAAA,GACdjC,KAAK,CAACe,KAAK,cAAAkB,YAAA,uBAAXA,YAAA,CACII,WAAW,CAAC,CAAC,CACdC,QAAQ,CAAChC,aAAa,CAAC+B,WAAW,CAAC,CAAC,CAAC;YAC1C,OAAOH,UAAU,IAAIE,YAAY;UACnC,CAAC,CAAC,CACDR,GAAG,CAAE5B,KAAK,iBACTd,OAAA,CAACL,SAAS;YAAgBmB,KAAK,EAAEA;UAAM,GAAvBA,KAAK,CAACuC,EAAE;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiB,CAC1C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtC,EAAA,CAlFID,UAAoB;EAAA,QACPP,WAAW;AAAA;AAAA4D,EAAA,GADxBrD,UAAoB;AAoF1B,eAAeA,UAAU;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}