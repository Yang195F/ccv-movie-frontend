{"ast":null,"code":"import apiRoutes from \"../config/apiRoutes\";\nexport const getCinemas = async () => {\n  try {\n    const response = await fetch(apiRoutes.cinemas.getAll);\n    const data = await response.json();\n    if (!response.ok) {\n      return {\n        success: false,\n        message: data.message || \"Failed to fetch cinemas\"\n      };\n    }\n    return {\n      success: true,\n      message: \"Cinemas fetched successfully\",\n      data: data.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message || \"Something went wrong\"\n    };\n  }\n};\nexport const getCinemaById = async cinemaId => {\n  try {\n    const response = await fetch(apiRoutes.cinemas.getById(cinemaId));\n    const data = await response.json();\n    if (!response.ok) {\n      return {\n        success: false,\n        message: data.message || \"Cinema not found\"\n      };\n    }\n    return {\n      success: true,\n      message: \"Cinema details fetched\",\n      data: data.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message || \"Something went wrong\"\n    };\n  }\n};\nexport const addCinema = async cinemaName => {\n  try {\n    const response = await fetch(apiRoutes.cinemas.add, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        cinemaName\n      })\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      return {\n        success: false,\n        message: data.message || \"Failed to add cinema\"\n      };\n    }\n    return {\n      success: true,\n      message: data.message || \"Cinema added successfully\",\n      data: data.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message || \"Something went wrong\"\n    };\n  }\n};\nexport const deleteCinema = async cinemaId => {\n  try {\n    const response = await fetch(apiRoutes.cinemas.delete(cinemaId), {\n      method: \"DELETE\"\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      return {\n        success: false,\n        message: data.message || \"Failed to delete cinema\"\n      };\n    }\n    return {\n      success: true,\n      message: data.message || \"Cinema deleted\"\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message || \"Something went wrong\"\n    };\n  }\n};\nexport const getRoomsByCinema = async cinemaId => {\n  try {\n    const response = await fetch(apiRoutes.cinemas.getRoomsByCinema(cinemaId));\n    const data = await response.json();\n    if (!response.ok) {\n      return {\n        success: false,\n        message: data.message || \"Failed to fetch rooms\"\n      };\n    }\n    return {\n      success: true,\n      message: \"Rooms fetched\",\n      data: data.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message || \"Something went wrong\"\n    };\n  }\n};\nexport const getRoomDetails = async roomId => {\n  try {\n    const response = await fetch(apiRoutes.cinemas.getRoom(roomId));\n    const data = await response.json();\n    if (!response.ok) {\n      return {\n        success: false,\n        message: data.message || \"Room not found\"\n      };\n    }\n    return {\n      success: true,\n      message: \"Room fetched\",\n      data: data.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message || \"Something went wrong\"\n    };\n  }\n};\nexport const addRoom = async roomData => {\n  try {\n    const response = await fetch(apiRoutes.cinemas.addRoom, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(roomData)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      return {\n        success: false,\n        message: data.message || \"Failed to add room\"\n      };\n    }\n    return {\n      success: true,\n      message: data.message || \"Room added\",\n      data: data.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message || \"Something went wrong\"\n    };\n  }\n};\nexport const updateRoom = async (roomId, data) => {\n  try {\n    const response = await fetch(apiRoutes.cinemas.updateRoom(roomId), {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const result = await response.json();\n    if (!response.ok) {\n      return {\n        success: false,\n        message: result.message || \"Failed to update room\"\n      };\n    }\n    return {\n      success: true,\n      message: result.message || \"Room updated\"\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message || \"Something went wrong\"\n    };\n  }\n};\nexport const deleteRoom = async roomId => {\n  try {\n    const response = await fetch(apiRoutes.cinemas.deleteRoom(roomId), {\n      method: \"DELETE\"\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      return {\n        success: false,\n        message: data.message || \"Failed to delete room\"\n      };\n    }\n    return {\n      success: true,\n      message: data.message || \"Room deleted\"\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message || \"Something went wrong\"\n    };\n  }\n};","map":{"version":3,"names":["apiRoutes","getCinemas","response","fetch","cinemas","getAll","data","json","ok","success","message","error","getCinemaById","cinemaId","getById","addCinema","cinemaName","add","method","headers","body","JSON","stringify","deleteCinema","delete","getRoomsByCinema","getRoomDetails","roomId","getRoom","addRoom","roomData","updateRoom","result","deleteRoom"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/services/cinemaService.ts"],"sourcesContent":["import apiRoutes from \"../config/apiRoutes\";\r\n\r\nexport const getCinemas = async () => {\r\n    try {\r\n        const response = await fetch(apiRoutes.cinemas.getAll);\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n            return {\r\n                success: false,\r\n                message: data.message || \"Failed to fetch cinemas\",\r\n            };\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            message: \"Cinemas fetched successfully\",\r\n            data: data.data,\r\n        };\r\n    } catch (error: any) {\r\n        return {\r\n            success: false,\r\n            message: error.message || \"Something went wrong\",\r\n        };\r\n    }\r\n};\r\n\r\nexport const getCinemaById = async (cinemaId: string) => {\r\n    try {\r\n        const response = await fetch(apiRoutes.cinemas.getById(cinemaId));\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n            return {\r\n                success: false,\r\n                message: data.message || \"Cinema not found\",\r\n            };\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            message: \"Cinema details fetched\",\r\n            data: data.data,\r\n        };\r\n    } catch (error: any) {\r\n        return {\r\n            success: false,\r\n            message: error.message || \"Something went wrong\",\r\n        };\r\n    }\r\n};\r\n\r\nexport const addCinema = async (cinemaName: string) => {\r\n    try {\r\n        const response = await fetch(apiRoutes.cinemas.add, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ cinemaName }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n            return {\r\n                success: false,\r\n                message: data.message || \"Failed to add cinema\",\r\n            };\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            message: data.message || \"Cinema added successfully\",\r\n            data: data.data,\r\n        };\r\n    } catch (error: any) {\r\n        return {\r\n            success: false,\r\n            message: error.message || \"Something went wrong\",\r\n        };\r\n    }\r\n};\r\n\r\nexport const deleteCinema = async (cinemaId: string) => {\r\n    try {\r\n        const response = await fetch(apiRoutes.cinemas.delete(cinemaId), {\r\n            method: \"DELETE\",\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n            return {\r\n                success: false,\r\n                message: data.message || \"Failed to delete cinema\",\r\n            };\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            message: data.message || \"Cinema deleted\",\r\n        };\r\n    } catch (error: any) {\r\n        return {\r\n            success: false,\r\n            message: error.message || \"Something went wrong\",\r\n        };\r\n    }\r\n};\r\n\r\nexport const getRoomsByCinema = async (cinemaId: string) => {\r\n    try {\r\n        const response = await fetch(apiRoutes.cinemas.getRoomsByCinema(cinemaId));\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n            return {\r\n                success: false,\r\n                message: data.message || \"Failed to fetch rooms\",\r\n            };\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            message: \"Rooms fetched\",\r\n            data: data.data,\r\n        };\r\n    } catch (error: any) {\r\n        return {\r\n            success: false,\r\n            message: error.message || \"Something went wrong\",\r\n        };\r\n    }\r\n};\r\n\r\nexport const getRoomDetails = async (roomId: string) => {\r\n    try {\r\n        const response = await fetch(apiRoutes.cinemas.getRoom(roomId));\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n            return {\r\n                success: false,\r\n                message: data.message || \"Room not found\",\r\n            };\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            message: \"Room fetched\",\r\n            data: data.data,\r\n        };\r\n    } catch (error: any) {\r\n        return {\r\n            success: false,\r\n            message: error.message || \"Something went wrong\",\r\n        };\r\n    }\r\n};\r\n\r\nexport const addRoom = async (roomData: {\r\n    cinemaName: string;\r\n    roomName: string;\r\n    layoutType: string;\r\n}) => {\r\n    try {\r\n        const response = await fetch(apiRoutes.cinemas.addRoom, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(roomData),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n            return {\r\n                success: false,\r\n                message: data.message || \"Failed to add room\",\r\n            };\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            message: data.message || \"Room added\",\r\n            data: data.data,\r\n        };\r\n    } catch (error: any) {\r\n        return {\r\n            success: false,\r\n            message: error.message || \"Something went wrong\",\r\n        };\r\n    }\r\n};\r\n\r\nexport const updateRoom = async (\r\n    roomId: string,\r\n    data: { newName: string; layoutType: string }\r\n) => {\r\n    try {\r\n        const response = await fetch(apiRoutes.cinemas.updateRoom(roomId), {\r\n            method: \"PUT\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(data),\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (!response.ok) {\r\n            return {\r\n                success: false,\r\n                message: result.message || \"Failed to update room\",\r\n            };\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            message: result.message || \"Room updated\",\r\n        };\r\n    } catch (error: any) {\r\n        return {\r\n            success: false,\r\n            message: error.message || \"Something went wrong\",\r\n        };\r\n    }\r\n};\r\n\r\nexport const deleteRoom = async (roomId: string) => {\r\n    try {\r\n        const response = await fetch(apiRoutes.cinemas.deleteRoom(roomId), {\r\n            method: \"DELETE\",\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n            return {\r\n                success: false,\r\n                message: data.message || \"Failed to delete room\",\r\n            };\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            message: data.message || \"Room deleted\",\r\n        };\r\n    } catch (error: any) {\r\n        return {\r\n            success: false,\r\n            message: error.message || \"Something went wrong\",\r\n        };\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}