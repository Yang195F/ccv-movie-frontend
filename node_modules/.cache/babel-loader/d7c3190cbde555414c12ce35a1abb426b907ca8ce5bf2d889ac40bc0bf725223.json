{"ast":null,"code":"import apiRoutes from \"../config/apiRoutes\";\nexport const getAllCinemas = async () => {\n  const res = await fetch(apiRoutes.cinemas.getAll);\n  return await res.json();\n};\nexport const getCinemaById = async cinemaId => {\n  const res = await fetch(apiRoutes.cinemas.getById(cinemaId));\n  return await res.json();\n};\nexport const getCinemaByName = async name => {\n  const res = await fetch(apiRoutes.cinemas.getByName(name));\n  return await res.json();\n};\nexport const addCinema = async cinemaName => {\n  const res = await fetch(apiRoutes.cinemas.add, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      cinemaName\n    })\n  });\n  return await res.json();\n};\nexport const updateCinemaName = async (cinemaId, newName) => {\n  const res = await fetch(apiRoutes.cinemas.update(cinemaId), {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(newName)\n  });\n  return await res.json();\n};\nexport const deleteCinema = async cinemaId => {\n  const res = await fetch(apiRoutes.cinemas.delete(cinemaId), {\n    method: \"DELETE\"\n  });\n  return await res.json();\n};\nexport const addRoom = async roomData => {\n  const res = await fetch(apiRoutes.cinemas.addRoom, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(roomData)\n  });\n  return await res.json();\n};\nexport const getRoomDetails = async roomId => {\n  const res = await fetch(apiRoutes.cinemas.getRoom(roomId));\n  return await res.json();\n};\nexport const getRoomsByCinema = async cinemaId => {\n  const res = await fetch(apiRoutes.cinemas.getRoomsByCinema(cinemaId));\n  return await res.json();\n};\nexport const updateRoom = async (roomId, data) => {\n  const res = await fetch(apiRoutes.cinemas.updateRoom(roomId), {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return await res.json();\n};\nexport const deleteRoom = async roomId => {\n  const res = await fetch(apiRoutes.cinemas.deleteRoom(roomId), {\n    method: \"DELETE\"\n  });\n  return await res.json();\n};","map":{"version":3,"names":["apiRoutes","getAllCinemas","res","fetch","cinemas","getAll","json","getCinemaById","cinemaId","getById","getCinemaByName","name","getByName","addCinema","cinemaName","add","method","headers","body","JSON","stringify","updateCinemaName","newName","update","deleteCinema","delete","addRoom","roomData","getRoomDetails","roomId","getRoom","getRoomsByCinema","updateRoom","data","deleteRoom"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/services/cinemaService.ts"],"sourcesContent":["import apiRoutes from \"../config/apiRoutes\"\r\n\r\nexport const getAllCinemas = async () => {\r\n    const res = await fetch(apiRoutes.cinemas.getAll)\r\n    return await res.json()\r\n}\r\n\r\nexport const getCinemaById = async (cinemaId: string) => {\r\n    const res = await fetch(apiRoutes.cinemas.getById(cinemaId))\r\n    return await res.json()\r\n}\r\n\r\nexport const getCinemaByName = async (name: string) => {\r\n    const res = await fetch(apiRoutes.cinemas.getByName(name))\r\n    return await res.json()\r\n}\r\n\r\nexport const addCinema = async (cinemaName: string) => {\r\n    const res = await fetch(apiRoutes.cinemas.add, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ cinemaName }),\r\n    })\r\n    return await res.json()\r\n}\r\n\r\nexport const updateCinemaName = async (cinemaId: string, newName: string) => {\r\n    const res = await fetch(apiRoutes.cinemas.update(cinemaId), {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(newName),\r\n    })\r\n    return await res.json()\r\n}\r\n\r\nexport const deleteCinema = async (cinemaId: string) => {\r\n    const res = await fetch(apiRoutes.cinemas.delete(cinemaId), {\r\n        method: \"DELETE\",\r\n    })\r\n    return await res.json()\r\n}\r\n\r\nexport const addRoom = async (roomData: {\r\n    cinemaName: string\r\n    roomName: string\r\n    layoutType: string\r\n}) => {\r\n    const res = await fetch(apiRoutes.cinemas.addRoom, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(roomData),\r\n    })\r\n    return await res.json()\r\n}\r\n\r\nexport const getRoomDetails = async (roomId: string) => {\r\n    const res = await fetch(apiRoutes.cinemas.getRoom(roomId))\r\n    return await res.json()\r\n}\r\n\r\nexport const getRoomsByCinema = async (cinemaId: string) => {\r\n    const res = await fetch(apiRoutes.cinemas.getRoomsByCinema(cinemaId))\r\n    return await res.json()\r\n}\r\n\r\nexport const updateRoom = async (roomId: string, data: { newName: string; layoutType: string }) => {\r\n    const res = await fetch(apiRoutes.cinemas.updateRoom(roomId), {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n    })\r\n    return await res.json()\r\n}\r\n\r\nexport const deleteRoom = async (roomId: string) => {\r\n    const res = await fetch(apiRoutes.cinemas.deleteRoom(roomId), {\r\n        method: \"DELETE\",\r\n    })\r\n    return await res.json()\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}