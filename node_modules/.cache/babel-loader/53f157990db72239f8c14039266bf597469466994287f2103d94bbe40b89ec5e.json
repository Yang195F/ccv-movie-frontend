{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iamfo\\\\Documents\\\\ccv-movie-frontend\\\\src\\\\pages\\\\MovieDetails.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"../styles/movie_detail.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Temporary mock data (replace with API call later)\nconst mockMovies = [{\n  id: 1,\n  title: \"Bad Boys\",\n  image: \"https://imgur.com/estKH6K.png\",\n  banner: \"https://imgur.com/exampleBanner1.png\",\n  rating: \"P12\",\n  category: \"NOW SHOWING\",\n  releaseDate: \"2025-04-08\",\n  genre: \"Action, Comedy\",\n  languages: [\"English\"],\n  duration: \"1h 50m\",\n  hasBookNow: true,\n  dates: [\"2025-04-08\", \"2025-04-09\", \"2025-04-10\"],\n  screenings: [{\n    cinema: \"Boulevard Bintulu\",\n    times: [\"1:00 PM\", \"3:30 PM\", \"8:15 PM\"]\n  }, {\n    cinema: \"Pavilion KL\",\n    times: [\"12:45 PM\", \"5:00 PM\", \"9:30 PM\"]\n  }]\n}, {\n  id: 2,\n  title: \"Inception\",\n  image: \"https://imgur.com/LRvKBpv.png\",\n  banner: \"https://imgur.com/exampleBanner2.png\",\n  rating: \"P13\",\n  category: \"NOW SHOWING\",\n  releaseDate: \"2025-04-08\",\n  genre: \"Sci-Fi, Thriller\",\n  languages: [\"English\", \"Japanese\"],\n  duration: \"2h 28m\",\n  hasBookNow: true,\n  dates: [\"2025-04-08\", \"2025-04-09\"],\n  screenings: [{\n    cinema: \"1 Utama\",\n    times: [\"11:00 AM\", \"2:00 PM\", \"6:45 PM\"]\n  }]\n}];\nconst MovieDetail = () => {\n  _s();\n  var _movie$languages, _movie$dates, _movie$screenings;\n  const {\n    id\n  } = useParams();\n  const movie = mockMovies.find(m => m.id === parseInt(id || \"\", 10));\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"white\",\n        padding: \"2rem\"\n      },\n      children: \"Movie not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-banner\",\n      style: {\n        backgroundImage: `url(${movie.banner})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"movie-title\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: movie.genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), \" | \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movie.duration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 42\n          }, this), \" |\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_movie$languages = movie.languages) === null || _movie$languages === void 0 ? void 0 : _movie$languages.join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Dates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dates\",\n        children: (_movie$dates = movie.dates) === null || _movie$dates === void 0 ? void 0 : _movie$dates.map(date => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-tag\",\n          children: new Date(date).toDateString()\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Choose Cinema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), (_movie$screenings = movie.screenings) === null || _movie$screenings === void 0 ? void 0 : _movie$screenings.map(screen => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cinema-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: screen.cinema\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screening-times\",\n          children: screen.times.map(time => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"time-button\",\n            children: time\n          }, time, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, screen.cinema, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetail, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","mockMovies","id","title","image","banner","rating","category","releaseDate","genre","languages","duration","hasBookNow","dates","screenings","cinema","times","MovieDetail","_s","_movie$languages","_movie$dates","_movie$screenings","movie","find","m","parseInt","style","color","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","className","backgroundImage","join","map","date","Date","toDateString","screen","time","_c","$RefreshReg$"],"sources":["C:/Users/iamfo/Documents/ccv-movie-frontend/src/pages/MovieDetails.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"../styles/movie_detail.css\";\r\nimport { MovieProps } from \"../interfaces/movies\";\r\n\r\n// Temporary mock data (replace with API call later)\r\nconst mockMovies: MovieProps[] = [\r\n  {\r\n    id: 1,\r\n    title: \"Bad Boys\",\r\n    image: \"https://imgur.com/estKH6K.png\",\r\n    banner: \"https://imgur.com/exampleBanner1.png\",\r\n    rating: \"P12\",\r\n    category: \"NOW SHOWING\",\r\n    releaseDate: \"2025-04-08\",\r\n    genre: \"Action, Comedy\",\r\n    languages: [\"English\"],\r\n    duration: \"1h 50m\",\r\n    hasBookNow: true,\r\n    dates: [\"2025-04-08\", \"2025-04-09\", \"2025-04-10\"],\r\n    screenings: [\r\n      {\r\n        cinema: \"Boulevard Bintulu\",\r\n        times: [\"1:00 PM\", \"3:30 PM\", \"8:15 PM\"],\r\n      },\r\n      {\r\n        cinema: \"Pavilion KL\",\r\n        times: [\"12:45 PM\", \"5:00 PM\", \"9:30 PM\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Inception\",\r\n    image: \"https://imgur.com/LRvKBpv.png\",\r\n    banner: \"https://imgur.com/exampleBanner2.png\",\r\n    rating: \"P13\",\r\n    category: \"NOW SHOWING\",\r\n    releaseDate: \"2025-04-08\",\r\n    genre: \"Sci-Fi, Thriller\",\r\n    languages: [\"English\", \"Japanese\"],\r\n    duration: \"2h 28m\",\r\n    hasBookNow: true,\r\n    dates: [\"2025-04-08\", \"2025-04-09\"],\r\n    screenings: [\r\n      {\r\n        cinema: \"1 Utama\",\r\n        times: [\"11:00 AM\", \"2:00 PM\", \"6:45 PM\"],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst MovieDetail: React.FC = () => {\r\n  const { id } = useParams();\r\n  const movie = mockMovies.find((m) => m.id === parseInt(id || \"\", 10));\r\n\r\n  if (!movie) {\r\n    return (\r\n      <div style={{ color: \"white\", padding: \"2rem\" }}>Movie not found.</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"movie-detail\">\r\n      {/* Banner */}\r\n      <div\r\n        className=\"movie-banner\"\r\n        style={{\r\n          backgroundImage: `url(${movie.banner})`,\r\n        }}\r\n      >\r\n        <div className=\"overlay\">\r\n          <h1 className=\"movie-title\">{movie.title}</h1>\r\n          <div className=\"movie-info\">\r\n            <span>{movie.genre}</span> | <span>{movie.duration}</span> |{\" \"}\r\n            <span>{movie.languages?.join(\", \")}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"movie-content\">\r\n        <h3>Available Dates</h3>\r\n        <div className=\"dates\">\r\n          {movie.dates?.map((date) => (\r\n            <div key={date} className=\"date-tag\">\r\n              {new Date(date).toDateString()}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <h3>Choose Cinema</h3>\r\n        {movie.screenings?.map((screen) => (\r\n          <div key={screen.cinema} className=\"cinema-block\">\r\n            <h4>{screen.cinema}</h4>\r\n            <div className=\"screening-times\">\r\n              {screen.times.map((time) => (\r\n                <button key={time} className=\"time-button\">\r\n                  {time}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}