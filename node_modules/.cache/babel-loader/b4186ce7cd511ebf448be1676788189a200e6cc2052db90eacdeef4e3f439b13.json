{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ccv-movie-frontend\\\\src\\\\components\\\\PosterUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PosterUpload = ({\n  poster,\n  setPoster\n}) => {\n  _s();\n  const [imageLink, setImageLink] = useState(\"\");\n  const handleLinkChange = e => {\n    const link = e.target.value;\n    setImageLink(link);\n    setPoster(link); // Update the poster with the entered link\n  };\n  const handleImageChange = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPoster(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-poster\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Paste Image URL:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: imageLink,\n      onChange: handleLinkChange,\n      placeholder: \"https://example.com/poster.jpg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"10px 0\"\n      },\n      children: \"OR upload from your PC:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poster-box\",\n      children: poster ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: poster,\n        alt: \"Movie Poster\",\n        className: \"poster-preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Image Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(PosterUpload, \"Wl/LiQ1JBfuaMnPGkjJHqd5UxSg=\");\n_c = PosterUpload;\nexport default PosterUpload;\nvar _c;\n$RefreshReg$(_c, \"PosterUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PosterUpload","poster","setPoster","_s","imageLink","setImageLink","handleLinkChange","e","link","target","value","handleImageChange","event","_event$target$files","file","files","reader","FileReader","onloadend","result","readAsDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","margin","accept","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/components/PosterUpload.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\ninterface PosterUploadProps {\r\n  poster: string | null;\r\n  setPoster: React.Dispatch<React.SetStateAction<string | null>>;\r\n}\r\n\r\nconst PosterUpload: React.FC<PosterUploadProps> = ({ poster, setPoster }) => {\r\n  const [imageLink, setImageLink] = useState(\"\");\r\n\r\n  const handleLinkChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const link = e.target.value;\r\n    setImageLink(link);\r\n    setPoster(link); // Update the poster with the entered link\r\n  };\r\n\r\n  const handleImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPoster(reader.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"movie-poster\">\r\n      <label>Paste Image URL:</label>\r\n      <input\r\n        type=\"text\"\r\n        value={imageLink}\r\n        onChange={handleLinkChange}\r\n        placeholder=\"https://example.com/poster.jpg\"\r\n      />\r\n\r\n      <p style={{ margin: \"10px 0\" }}>OR upload from your PC:</p>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n\r\n      <div className=\"poster-box\">\r\n        {poster ? (\r\n          <img src={poster} alt=\"Movie Poster\" className=\"poster-preview\" />\r\n        ) : (\r\n          <p>No Image Selected</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosterUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMS,gBAAgB,GAAIC,CAAsC,IAAK;IACnE,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3BL,YAAY,CAACG,IAAI,CAAC;IAClBN,SAAS,CAACM,IAAI,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAMG,iBAAiB,GAAIC,KAA0C,IAAK;IAAA,IAAAC,mBAAA;IACxE,MAAMC,IAAI,IAAAD,mBAAA,GAAGD,KAAK,CAACH,MAAM,CAACM,KAAK,cAAAF,mBAAA,uBAAlBA,mBAAA,CAAqB,CAAC,CAAC;IACpC,IAAIC,IAAI,EAAE;MACR,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACvBhB,SAAS,CAACc,MAAM,CAACG,MAAgB,CAAC;MACpC,CAAC;MACDH,MAAM,CAACI,aAAa,CAACN,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,oBACEf,OAAA;IAAKsB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BvB,OAAA;MAAAuB,QAAA,EAAO;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC/B3B,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXjB,KAAK,EAAEN,SAAU;MACjBwB,QAAQ,EAAEtB,gBAAiB;MAC3BuB,WAAW,EAAC;IAAgC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAEF3B,OAAA;MAAG+B,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAT,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3D3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACK,MAAM,EAAC,SAAS;MAACJ,QAAQ,EAAEjB;IAAkB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEnE3B,OAAA;MAAKsB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBrB,MAAM,gBACLF,OAAA;QAAKkC,GAAG,EAAEhC,MAAO;QAACiC,GAAG,EAAC,cAAc;QAACb,SAAS,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAElE3B,OAAA;QAAAuB,QAAA,EAAG;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACxB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CA1CIH,YAAyC;AAAAmC,EAAA,GAAzCnC,YAAyC;AA4C/C,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}