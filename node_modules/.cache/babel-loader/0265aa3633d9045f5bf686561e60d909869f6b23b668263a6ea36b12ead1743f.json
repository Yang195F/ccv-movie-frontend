{"ast":null,"code":"import apiRoutes from \"../config/apiRoutes\";\nexport const login = async (userId, password) => {\n  try {\n    const response = await fetch(apiRoutes.auth.login, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        UserId: userId,\n        Password: password\n      })\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || \"Login failed!\");\n    }\n    return {\n      success: true,\n      data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message || \"An unknown error occurred\"\n    };\n  }\n};","map":{"version":3,"names":["apiRoutes","login","userId","password","response","fetch","auth","method","headers","body","JSON","stringify","UserId","Password","data","json","ok","Error","message","success","error"],"sources":["/Users/macbook/Documents/GitHub/ccv-movie-frontend/src/services/authService.ts"],"sourcesContent":["import apiRoutes from \"../config/apiRoutes\";\nexport const login = async (userId: string, password: string) => {\n    try {\n        const response = await fetch(apiRoutes.auth.login, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                UserId: userId,\n                Password: password\n            }),\n        });\n\n        const data = await response.json();\n        if (!response.ok) {\n            throw new Error(data.message || \"Login failed!\");\n        }\n\n        return { success: true, data };\n    } catch (error: any) {\n        return { success: false, message: error.message || \"An unknown error occurred\" };\n    }\n};"],"mappings":"AAAA,OAAOA,SAAS,MAAM,qBAAqB;AAC3C,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,MAAc,EAAEC,QAAgB,KAAK;EAC7D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,SAAS,CAACM,IAAI,CAACL,KAAK,EAAE;MAC/CM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,MAAM,EAAEV,MAAM;QACdW,QAAQ,EAAEV;MACd,CAAC;IACL,CAAC,CAAC;IAEF,MAAMW,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,IAAI,CAACX,QAAQ,CAACY,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,eAAe,CAAC;IACpD;IAEA,OAAO;MAAEC,OAAO,EAAE,IAAI;MAAEL;IAAK,CAAC;EAClC,CAAC,CAAC,OAAOM,KAAU,EAAE;IACjB,OAAO;MAAED,OAAO,EAAE,KAAK;MAAED,OAAO,EAAEE,KAAK,CAACF,OAAO,IAAI;IAA4B,CAAC;EACpF;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}