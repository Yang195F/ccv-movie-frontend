{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ccv-movie-frontend\\\\src\\\\pages\\\\AddMovie.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card, CardContent } from \"../components/ui/card\";\nimport Button from \"../components/ui/button\";\nimport { HeartIcon } from \"lucide-react\";\nimport \"../styles/dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst movies = [{\n  title: \"NE ZHA 2 哪吒之魔童闹海\",\n  genre: \"Animation, Action, Drama\",\n  duration: \"2 hr 24 min\",\n  language: \"Mandarin\",\n  showtimes: {\n    IMAX: [\"1:00 PM\", \"3:45 PM\", \"6:30 PM\", \"9:30 PM\", \"12:30 AM 28 Mar 2025\"],\n    INDULGE: [\"1:30 PM\", \"2:15 PM\", \"4:45 PM\", \"5:30 PM\", \"8:00 PM\"],\n    BEANIE: [\"11:15 PM\", \"11:30 PM\"]\n  }\n}];\nexport default function AdminDashboard() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(\"27 MAR\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-selector\",\n      children: [\"27 MAR\", \"28 MAR\", \"29 MAR\", \"30 MAR\", \"31 MAR\", \"1 APR\", \"2 APR\", \"3 APR\"].map(date => /*#__PURE__*/_jsxDEV(Button, {\n        className: `date-btn ${selectedDate === date ? \"active\" : \"\"}`,\n        onClick: () => setSelectedDate(date),\n        children: date\n      }, date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"movie-card\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"movie-title\",\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"movie-details\",\n                children: [movie.genre, \" | \", movie.duration, \" | \", movie.language]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              size: \"icon\",\n              children: /*#__PURE__*/_jsxDEV(HeartIcon, {\n                className: \"heart-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"showtimes\",\n            children: Object.entries(movie.showtimes).map(([category, times]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"showtime-category\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: `showtime-label ${category.toLowerCase()}`,\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-buttons\",\n                children: times.map((time, i) => /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"time-btn\",\n                  children: time\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this)]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"JABJdP+h4LH954lXmcZntdgS7lQ=\");\n_c = AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","Card","CardContent","Button","HeartIcon","jsxDEV","_jsxDEV","movies","title","genre","duration","language","showtimes","IMAX","INDULGE","BEANIE","AdminDashboard","_s","selectedDate","setSelectedDate","className","children","map","date","onClick","fileName","_jsxFileName","lineNumber","columnNumber","movie","index","variant","size","Object","entries","category","times","toLowerCase","time","i","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/pages/AddMovie.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Card, CardContent } from \"../components/ui/card\";\r\nimport Button from \"../components/ui/button\";\r\nimport { HeartIcon } from \"lucide-react\";\r\nimport \"../styles/dashboard.css\";\r\n\r\nconst movies = [\r\n  {\r\n    title: \"NE ZHA 2 哪吒之魔童闹海\",\r\n    genre: \"Animation, Action, Drama\",\r\n    duration: \"2 hr 24 min\",\r\n    language: \"Mandarin\",\r\n    showtimes: {\r\n      IMAX: [\"1:00 PM\", \"3:45 PM\", \"6:30 PM\", \"9:30 PM\", \"12:30 AM 28 Mar 2025\"],\r\n      INDULGE: [\"1:30 PM\", \"2:15 PM\", \"4:45 PM\", \"5:30 PM\", \"8:00 PM\"],\r\n      BEANIE: [\"11:15 PM\", \"11:30 PM\"],\r\n    },\r\n  },\r\n];\r\n\r\nexport default function AdminDashboard() {\r\n  const [selectedDate, setSelectedDate] = useState(\"27 MAR\");\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/* Date Selection */}\r\n      <div className=\"date-selector\">\r\n        {[\"27 MAR\", \"28 MAR\", \"29 MAR\", \"30 MAR\", \"31 MAR\", \"1 APR\", \"2 APR\", \"3 APR\"].map((date) => (\r\n          <Button\r\n            key={date}\r\n            className={`date-btn ${selectedDate === date ? \"active\" : \"\"}`}\r\n            onClick={() => setSelectedDate(date)}\r\n          >\r\n            {date}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Movie List */}\r\n      <div className=\"movie-list\">\r\n        {movies.map((movie, index) => (\r\n          <Card key={index} className=\"movie-card\">\r\n            <CardContent>\r\n              <div className=\"movie-header\">\r\n                <div>\r\n                  <h2 className=\"movie-title\">{movie.title}</h2>\r\n                  <p className=\"movie-details\">{movie.genre} | {movie.duration} | {movie.language}</p>\r\n                </div>\r\n                <Button variant=\"outline\" size=\"icon\">\r\n                  <HeartIcon className=\"heart-icon\" />\r\n                </Button>\r\n              </div>\r\n\r\n              {/* Showtimes */}\r\n              <div className=\"showtimes\">\r\n                {Object.entries(movie.showtimes).map(([category, times]) => (\r\n                  <div key={category} className=\"showtime-category\">\r\n                    <h3 className={`showtime-label ${category.toLowerCase()}`}>{category}</h3>\r\n                    <div className=\"time-buttons\">\r\n                      {times.map((time, i) => (\r\n                        <Button key={i} className=\"time-btn\">\r\n                          {time}\r\n                        </Button>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}