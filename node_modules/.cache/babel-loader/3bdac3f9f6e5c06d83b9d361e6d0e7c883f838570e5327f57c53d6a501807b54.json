{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ccv-movie-frontend\\\\src\\\\users\\\\pages\\\\ForgotPasswordPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { sendResetCode } from \"../../services/authService\";\nimport InputField from \"../../components/InputField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPasswordPage = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const result = await sendResetCode(email);\n    if (result.success) {\n      setMessage(\"Code sent to your email.\");\n      localStorage.setItem(\"resetUserId\", result.data); // 保存 userId\n    } else {\n      setError(result.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(InputField, {\n      label: \"Email\",\n      value: email,\n      onChange: setEmail,\n      type: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send Reset Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(ForgotPasswordPage, \"93h/aJO5x+HN7i+YpQwepLaFL6Q=\");\n_c = ForgotPasswordPage;\nexport default ForgotPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"names":["React","useState","sendResetCode","InputField","jsxDEV","_jsxDEV","ForgotPasswordPage","_s","email","setEmail","message","setMessage","error","setError","handleSubmit","e","preventDefault","result","success","localStorage","setItem","data","onSubmit","children","label","value","onChange","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/ccv-movie-frontend/src/users/pages/ForgotPasswordPage.tsx"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport { sendResetCode } from \"../../services/authService\"\r\nimport InputField from \"../../components/InputField\"\r\n\r\nconst ForgotPasswordPage: React.FC = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault()\r\n        const result = await sendResetCode(email)\r\n\r\n        if (result.success) {\r\n            setMessage(\"Code sent to your email.\")\r\n            localStorage.setItem(\"resetUserId\", result.data) // 保存 userId\r\n        } else {\r\n            setError(result.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <InputField label=\"Email\" value={email} onChange={setEmail} type=\"email\" />\r\n            <button type=\"submit\">Send Reset Code</button>\r\n            {message && <div>{message}</div>}\r\n            {error && <div>{error}</div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordPage\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,OAAOC,UAAU,MAAM,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,kBAA4B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,YAAY,GAAG,MAAOC,CAAkB,IAAK;IAC/CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,MAAM,GAAG,MAAMf,aAAa,CAACM,KAAK,CAAC;IAEzC,IAAIS,MAAM,CAACC,OAAO,EAAE;MAChBP,UAAU,CAAC,0BAA0B,CAAC;MACtCQ,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEH,MAAM,CAACI,IAAI,CAAC,EAAC;IACrD,CAAC,MAAM;MACHR,QAAQ,CAACI,MAAM,CAACP,OAAO,CAAC;IAC5B;EACJ,CAAC;EAED,oBACIL,OAAA;IAAMiB,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBACzBlB,OAAA,CAACF,UAAU;MAACqB,KAAK,EAAC,OAAO;MAACC,KAAK,EAAEjB,KAAM;MAACkB,QAAQ,EAAEjB,QAAS;MAACkB,IAAI,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3E1B,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAJ,QAAA,EAAC;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7CrB,OAAO,iBAAIL,OAAA;MAAAkB,QAAA,EAAMb;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC/BnB,KAAK,iBAAIP,OAAA;MAAAkB,QAAA,EAAMX;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEf,CAAC;AAAAxB,EAAA,CAzBKD,kBAA4B;AAAA0B,EAAA,GAA5B1B,kBAA4B;AA2BlC,eAAeA,kBAAkB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}